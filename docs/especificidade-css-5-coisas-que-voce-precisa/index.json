{"instances": {"application":{},"n-0-0-0-0":{},"n-0-0-0-1":{},"n-0-0-8":{"slug":"especificidade-css-5-coisas-que-voce-precisa","content":"<p><strong>Especificidade CSS</strong> é um tipo de “poder de escolha”, que ajuda os navegadores a decidir qual valor da propriedade CSS terá precedência e será aplicado aos elementos. Geralmente, a especificidade é o culpado por você bater cabeça quando pensa que o valor das propriedades CSS deve se aplicar a um elemento, mas não. A razão é que em algum lugar você esqueceu a Especificidade CSS.</p>\n<p>A especificidade do CSS geralmente é negligenciada e recebe menos importância pelos desenvolvedores, mas se não for levada a serio, pode ser o pior pesadelo para a depuração do CSS .</p>\n<h2>1 - Id é maior que classe</h2>\n<p>Bem, todos sabemos que o ID pode ser usado uma vez em uma estrutura de documento. No entanto, o ID em CSS é um exército de um homem que pode derrotar 1000 classes. Quando você tem ID (s) no seu seletor, o número de classes se torna irrelevante.</p>\n<pre><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>idTeste<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>barra1 barra 2 barra3 barra4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Um <span class=\"token constant\">ID</span> contra quatro classes<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n \n#idTeste<span class=\"token punctuation\">{</span>\n  color<span class=\"token operator\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span>barra1<span class=\"token punctuation\">.</span>barra2<span class=\"token punctuation\">.</span>barra3<span class=\"token punctuation\">.</span>barra4 <span class=\"token punctuation\">{</span>\n  color<span class=\"token operator\">:</span> steelblue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Resultado: A cor do parágrafo é &quot;red&quot; (vermelho).</p>\n<p>Embora tenhamos quatro classes em um parágrafo, mas um único ID o precedeu. O navegador não respeitará a posição do seletor, seja ela mais recente ou em algum lugar entre as linhas superiores quando for ID.</p>\n<h2>2 - Quem será o vencedor?</h2>\n<p>E se dois seletores se aplicarem ao mesmo elemento? Vamos dar um exemplo e depois prosseguir.</p>\n<pre><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>barra1 barra2 barra3 barr4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Temos quatro classess<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n \n<span class=\"token punctuation\">.</span>barra1<span class=\"token punctuation\">.</span>barra2<span class=\"token punctuation\">.</span>barra3<span class=\"token punctuation\">.</span>barr4 <span class=\"token punctuation\">{</span>\n  color<span class=\"token operator\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n \np<span class=\"token punctuation\">.</span>barra3<span class=\"token punctuation\">.</span>barra4 <span class=\"token punctuation\">{</span>\n    color<span class=\"token operator\">:</span> #<span class=\"token number\">2e8</span>dcd<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>A cor do parágrafo é &quot;green&quot; (Verde)</p>\n<p>O vencedor é aquele com especificidade sempre maior. Neste código, a especificidade do primeiro seletor é 0-4-0, enquanto a última regra tem especificidade 0-2-1. Não se preocupe com esse valor de especificidade; já já explicou com mais detalhes. Neste ponto, lembre-se de que a esquerda está sempre certa.</p>\n<p>Vamos verificar a primeira posição esquerda, ambos têm 0s. Como a primeira posição esquerda é igual, vamos comparar a próxima posição. Aqui, são 4 e 0. Claramente 4 é maior que 2. Então, 0-4-0 é o vencedor. Portanto, o parágrafo é da cor 'green'.</p>\n<h2>3 - CSS Inline - especificidade CSS</h2>\n<h3>Já bateu muito cabeça com CSS?</h3>\n<p>Recomendo você assistir o vídeo do Leonardo, ele desenvolveu um método incrível, onde você sai do ZERO a um programador full stack em 8 semanas, no vídeo ele conta também sua jornada como desenvolvedor full stack e o melhor, ele pode lhe ajuda ! E só clicar no botão VER VÍDEO.</p>\n<p><a href=\"/programador-fullstack-8-semanas\">VER VÍDEO</a></p>\n<p>Se você gosta de Guerra nas Estrelas, entenderá melhor. CSS inline tem mais poder do que IDs, classes, atributos e pseudo classes etc. É sempre aconselhável não misturar CSS inline com CSS baseado em seletor, a menos que você queira substituir regras de CSS ou casos específicos que incluem o desenvolvimento de plug-ins, widgets etc.</p>\n<h2>4 - O poderoso !important</h2>\n<p>Sempre que você anexar um valor com o !important, esse seletor será automaticamente declarado como de máxima prioridade em seu navegador. Para provar isso, vamos usar o mesmo código do primeiro exemplo com uma pequena alteração.</p>\n<pre><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>idTeste<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>barra1 barra2 barra3 barra4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Um <span class=\"token constant\">ID</span> contra quatro classes<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n \n#idTeste<span class=\"token punctuation\">{</span>\n  color<span class=\"token operator\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span>barra1<span class=\"token punctuation\">.</span>barra2<span class=\"token punctuation\">.</span>barra3<span class=\"token punctuation\">.</span>barra4 <span class=\"token punctuation\">{</span>\n  color<span class=\"token operator\">:</span> steelblue <span class=\"token operator\">!</span>important<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*Added !important value*/</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>No primeiro código, a cor do parágrafo era 'red', mas depois de anexar !important value, agora o parágrafo é de cor 'steelblue' (azul metálico)</p>\n<h2>5 - Calculo da Especificidade</h2>\n<p><img src=\"/uploads/2020/02/CSS-Especificidade-1024x617.jpg\" alt=\"especificidade CSS\"></p>\n<p>Figura 1: CSS Especificiidade</p>\n<p><img src=\"/uploads/2020/02/Tabela-de-especificidade.jpg\" alt=\"especificidade CSS\"></p>\n<p>Figura 2: CSS Especificidade</p>\n<h3>Já bateu muito cabeça com CSS?</h3>\n<p>Recomendo você assistir o vídeo do Leonardo, ele desenvolveu um método incrível, onde você sai do ZERO a um programador full stack em 8 semanas, no vídeo ele conta também sua jornada como desenvolvedor full stack e o melhor, ele pode lhe ajuda ! E só clicar no botão VER VÍDEO.</p>\n<p><a href=\"/programador-fullstack-8-semanas\">VER VÍDEO</a></p>\n<p>Para calcular a especificidade do CSS, primeiro escolhemos o seletor e depois calculamos quantas Ids e classes (incluindo pseudo-classes e atributo) e vários elementos existem. Depois de conhecê-los, escrevemos na ordem: abc</p>\n<p>Nós os comparamos movendo da esquerda para a direita. Assim que encontramos um ponto (a / b / c) maior que o outro, paramos por aí. Assim sabemos quem se tornou o vencedor com mais poderes, ou seja, com maior ordem de precedência.</p>\n<p>Com relação à tabela acima, o vencedor é o segundo seletor, ie p#idTeste. O motivo é que o ponto 'a' p#idTeste é maior que qualquer outro seletor a.</p>\n<h2>Conclusão</h2>\n<p>Espero que este pequeno artigo tenha lhe dado uma ideia sobre a especificidade do CSS e por que é tão importante considerar isso. Se você quiser se livrar dos problemas da Especificidade CSS. Caso tenha esquecido algo deixa nos comentários, deixa seu like caso esse artigo tenha lhe ajudado e compartilha com seus colegas.</p>\n<p>Artigo Recomendado: <a href=\"/css-grid-tudo-que-voce-nao-aprendeu-parte-1/\">Saiba tudo sobre CSS Gri</a>d</p>\n","date":"2020-02-15T00:00:00.000Z","readingTime":4,"title":"Especificidade CSS - 5 coisas que você deve saber","description":"Especificidade CSS é um tipo de “poder de escolha”, que ajuda os navegadores a decidir qual valor da propriedade CSS terá precedência e será aplicado aos elementos. Geralmente, a especificidade é o culpado por você bater cabeça quando pensa que o valor das propriedades CSS deve se aplicar a um elemento, mas não. A razão é que em algum lugar você esqueceu a Especificidade CSS.","imgArticle":"/thumbnail-article/especificidade-css.png","imgHome":"/thumbnail-home/especificidade-css.png"},"n-0-0-8-0-0":{"expanded":false},"n-0-0-8-0-0-0-0-0-0-1-0":{}}, "page": {"image":"/image-1200x630.png","status":200,"locale":"pt-BR","title":"Especificidade CSS - 5 coisas que você deve saber","description":"Especificidade CSS é um tipo de “poder de escolha”, que ajuda os navegadores a decidir qual valor da propriedade CSS terá precedência e será aplicado aos elementos. Geralmente, a especificidade é o culpado por você bater cabeça quando pensa que o valor das propriedades CSS deve se aplicar a um elemento, mas não. A razão é que em algum lugar você esqueceu a Especificidade CSS."}}