{"instances":{"application":{"persistent":false},"FacebookPixel_FacebookPixel/0-0-0-0-0":{"persistent":false},"GoogleAnalytics/0-0-0-0-1":{"persistent":false},"Home/0-0-2/":{"persistent":false},"Navigation/0-0-2-0-0":{"expanded":false,"persistent":false},"Icon1/0-0-2-0-0-0-0-0-0-1-0":{"persistent":false},"Header/0-0-2-0-1":{"persistent":false},"Articles/0-0-2-0-4":{"persistent":false,"articles":[{"slug":"curso-python-turbo-tipscode","content":"<p>Se você quer <strong>dominar Python e se destacar no mercado de tecnologia,</strong> o Curso Python Turbo da TipsCode é o seu caminho ideal! Com uma abordagem prática e objetiva, esse curso foi criado para ensinar Python do zero ao avançado, e oferece tudo que você precisa para se tornar um programador de alto nível.</p>\n<p>Neste artigo, você vai conhecer todos os detalhes e as vantagens exclusivas que o curso oferece. Prepare-se para acelerar sua carreira e dominar uma das linguagens de programação mais versáteis do mundo!</p>\n<h2>O que você vai aprender no Curso Python Turbo?</h2>\n<p>O Curso Python Turbo da TipsCode é dividido em cinco fases, cada uma com foco em uma área essencial da programação com Python. Vamos ver mais de perto o que cada fase aborda:</p>\n<h4>Fundamentos de Python</h4>\n<p>No módulo inicial, você vai aprender desde o básico da linguagem, como a sintaxe, variáveis, operadores, laços de repetição, e funções. Este é o ponto de partida perfeito para quem nunca programou antes ou para quem quer consolidar sua base.</p>\n<h4>Programação Orientada a Objetos (POO)</h4>\n<p>Na segunda fase, você vai se aprofundar na Orientação a Objetos, um dos pilares da programação moderna. Aqui, você aprenderá conceitos como classes, objetos, herança, polimorfismo e encapsulamento, que são fundamentais para escrever códigos limpos, organizados e escaláveis.</p>\n<h4>Desenvolvimento Web com Django e Flask</h4>\n<p>Já pensou em criar sites dinâmicos e sistemas robustos? Nesta fase, o foco é no desenvolvimento web utilizando os dois principais frameworks de Python: Django e Flask. Você aprenderá a construir desde simples aplicações web até projetos mais complexos, integrando banco de dados e autenticação de usuários.</p>\n<p><a href=\"https://bit.ly/47P1pkx\" target=\"_blank\" rel=\"noopener\">Fazer minha inscrição agora</a></p>\n<h4>Inteligência Artificial</h4>\n<p>Entre nas áreas mais promissoras da tecnologia com o módulo de Inteligência Artificial. Aprenda como desenvolver algoritmos que podem tomar decisões, realizar previsões e resolver problemas de forma automatizada. A IA está presente em diversas indústrias e é uma habilidade cada vez mais requisitada no mercado.</p>\n<h4>Automação com Python</h4>\n<p>A última fase do curso é voltada para a automação de tarefas repetitivas. Com o Python, você poderá criar scripts para automatizar processos e ganhar eficiência no dia a dia. Automatize desde o envio de emails até a coleta de dados da web, facilitando sua rotina e aumentando a produtividade.</p>\n<h2>Projetos Reais e Exercícios Práticos</h2>\n<p>Uma das maiores vantagens do Curso Python Turbo é a sua abordagem prática. Ao longo do curso, você vai realizar mais de 30 projetos reais e mais de 200 exercícios. Esses desafios foram pensados para que você aplique o que aprendeu em situações reais, te preparando para o mercado de trabalho.</p>\n<h3>Acesso Vitalício</h3>\n<p>O curso oferece acesso vitalício, o que significa que você poderá estudar no seu ritmo e revisitar o conteúdo sempre que precisar. Além disso, as atualizações do curso são automáticas e gratuitas, garantindo que você estará sempre por dentro das novidades da linguagem.</p>\n<h3>Comunidade e Suporte</h3>\n<p>Ao se inscrever no Curso Python Turbo, você não estará sozinho. O curso oferece acesso à comunidade no Discord, onde você poderá trocar ideias, tirar dúvidas e interagir com outros alunos. Além disso, você terá suporte via WhatsApp, garantindo que suas dúvidas serão respondidas rapidamente por nossos especialistas.</p>\n<h2>Por que aprender Python com a TipsCode?</h2>\n<p>O Python é uma das linguagens de programação mais populares e versáteis do mundo, sendo usada em uma ampla variedade de áreas como desenvolvimento web, ciência de dados, inteligência artificial e automação. Com o Curso Python Turbo, você estará pronto para se destacar em qualquer uma dessas áreas, com um aprendizado guiado e projetos práticos.</p>\n<p>Além disso, a TipsCode é uma escola reconhecida no mercado por seu método de ensino eficiente, que combina teoria e prática, preparando seus alunos para o mercado de trabalho. São mais de 120 horas de conteúdo, com um certificado reconhecido que vai valorizar o seu currículo.</p>\n<h2>Conclusão</h2>\n<p>Se você quer aprender Python de verdade e alcançar o próximo nível na sua carreira, o Curso Python Turbo é a escolha certa. Com acesso vitalício, suporte exclusivo, projetos práticos e uma comunidade ativa, você terá tudo o que precisa para se tornar um programador completo.</p>\n<p>Não perca essa oportunidade! <strong>Inscreva-se agora e acelere seu aprendizado com o Curso Python Turbo</strong> da TipsCode.</p>\n<p><a href=\"https://bit.ly/47P1pkx\" target=\"_blank\" rel=\"noopener\">Fazer minha inscrição agora</a></p>\n","date":"2024-10-03T00:00:00.000Z","readingTime":3,"title":"O Python chegou à TipsCode: Curso Python Turbo","description":"Se você quer dominar Python e se destacar no mercado de tecnologia, o Curso Python Turbo da TipsCode é o seu caminho ideal! Com uma abordagem prática e objetiva, esse curso foi criado para ensinar Python do zero ao avançado.","imgArticle":"/thumbnail-article/curso-python-turbo.png","imgHome":"/thumbnail-home/curso-python-turbo.png"},{"slug":"curso-reactjs-pro-tipscode","content":"<p>O curso ReactJS PRO foi elaborado com o objetivo de criar profissionais capacitados a entrarem no mercado de trabalho, com\nmódulos e aulas curtas e direto ao ponto sem enrolação, tudo bem passo a passo.</p>\n<h2>O que é ReactJS ?</h2>\n<p>React JS é uma biblioteca JavaScript para a criação de interfaces de usuário — ou UI (user interface).</p>\n<p>Criado em 2011 pelo time do Facebook hoje Meta, o React surgiu com o objetivo de otimizar a atualização e a sincronização de atividades simultâneas no feed de notícias da rede social, entre eles chat, status, listagem de contatos e outros.</p>\n<p>A princípio, todas essas atividades, chamadas de estados, tinham uma descrição muito complexa. Com o React, esta descrição torna-se mais simples, bem como também é simplificada a conexão entre HTML, CSS e JavaScript e todos os componentes de uma página.</p>\n<p>Por ter demonstrado grande eficiência, nos anos que se seguiram o React foi incorporado à interface de outras redes sociais do grupo, como o Instagram e, em 2013, seu código foi aberto à comunidade, dando início a sua popularização.</p>\n<p>Hoje, o React é uma das mais prestigiadas bibliotecas de JavaScript do mercado.</p>\n<h2>Como funciona o React?</h2>\n<p>O React é uma biblioteca front-end e tem como um de seus objetivos facilitar a conexão entre diferentes partes de uma página, portanto seu funcionamento acontece através do que chamamos de componentes.</p>\n<p>Em outras palavras, podemos imaginar que o React divide uma tela em diversos componentes para, então, trabalhar sobre eles de maneira individual.</p>\n<p>Os componentes são utilizados para reaproveitamento de código e padronização de interface.</p>\n<p>Isso torna o React uma tecnologia muito flexível para a solução de problemas e para a construção de interfaces reutilizáveis, uma vez que cada um destes componentes pode ser manipulado de maneira distinta.</p>\n<h2>Curso React Js</h2>\n<p>No curso da TipsCode além de você aprender todos os detalhes desdo básico ao avançado você tem conhecerá um novo framework que\nveio para fica e logo caiu na graças dos desenvolvedores e todo o mercado hoje em dia está usando, claro que estamos\nfalado do novo queridinho o NextJS</p>\n<h3>O que é o NextJS?</h3>\n<p>Next.js é um framework para React. O que isso quer dizer? O React é uma biblioteca Javascript para construção de interfaces e o Next é considerado um framework pois adiciona várias funcionalidades em cima do React.</p>\n<p>Algumas funcionalidades do Next.js: renderização estática e pelo lado do servidor. Possui suporte ao Typescript e um serviço de tratamento de rotas muito interessante, que vamos detalhar mais durante esse texto.</p>\n<p>Muitas funcionalidades são mais perceptíveis com a nossa aplicação em produção, pois o Next possui dois pontos principais em seu objetivo: tornar nossa aplicação React mais performática e a questão da indexação do conteúdo da página pelos motores de busca.</p>\n<p>Sobre esse ponto da indexação, quando desenvolvemos nossas aplicações da maneira tradicional com React, toda nossa interface e toda chamada à API se faz pelo lado do cliente (browser).</p>\n<p>Então, quando algum motor de busca ou crawler tentar indexar uma página feita em React, geralmente não vai esperar que nossa aplicação faça o carregamento do Javascript, chamadas à API e toda a construção da página.</p>\n<p>Ou seja, essa busca retorna vazia ou sem as informações mais relevantes para que nossa aplicação consiga ser indexada.</p>\n<p>Onde o Next.js se encaixa nesse cenário? Para gerar toda a página para o browser, o Next utiliza um servidor Node.js. Usa-se Node.js nesse cenário apenas por entender Javascript nativamente.</p>\n<p>Dessa forma, o Next consegue entregar a página pronta para o Browser, ou seja, todo o HTML, CSS e Javascript. Esse comportamento chama-se Server-Side-Rendering.</p>\n<p><a href=\"https://go.hotmart.com/F68520890I?src=blog\" target=\"_blank\" rel=\"noopener\">FAZER INSCRIÇÃO AGORA</a></p>\n","date":"2022-06-24T00:00:00.000Z","readingTime":2,"title":"Curso ReactJS PRO da TipsCode","tags":["curso reactjs pro","reactjs","react","tipscode","next.js","react.js","typescript","Alisson","Suassuna","Alisson Suassuna","tipscode","tecnologia","programação","javascript"],"description":"Curso ReactJS PRO torne-se um especialista na maior ferramenta de criação de interface web do mundo.","imgArticle":"/thumbnail-article/curso-react-pro.png","imgHome":"/thumbnail-home/curso-react-pro.png"},{"slug":"como-e-a-carreira-de-desenvolvedor-na-intelie","content":"<h2>Quem é a Intelie</h2>\n<p>A Intelie ajuda seus clientes a obter visibilidade sobre negócios complexos e dinâmicos. Ao fornecer inteligência operacional e análises em tempo real, ajudamos as empresas a evitar falhas que podem causar grandes perdas em poucos minutos.</p>\n<p>Nossa plataforma de stream analytics, Intelie Live, pode coletar dados de qualquer fonte e processar centenas de milhares de eventos por segundo, usando correlações complexas e algoritmos avançados (como aprendizado de máquina e técnicas de engenharia tradicionais) para antecipar anomalias e identificar oportunidades de negócios e melhoria operacional.</p>\n<p>Trabalhamos com empresas líderes de setores como Petróleo e Gás, Logística, Bancário, Seguros e Varejo para transformar.</p>\n<h2>Intelie Live</h2>\n<p>Hoje, o Intelie LIVE é uma ferramenta chave de monitoramento e inteligência operacional para 47% de todas as plataformas de perfuração em águas profundas que operam ativamente no mundo*.</p>\n<p>Ajudamos as melhores empresas de O&amp;G a manter a consciência da situação com dados em tempo real contextualizados por informações críticas fornecidas por engenheiros. Nossa plataforma captura dados de sensores e os combina com todos os demais dados gerados no ciclo de vida de um Poço (projeto, planos, custos) para alimentar algoritmos avançados de aprendizado de máquina e modelos físicos que tornam o gerenciamento da operação mais inteligente em um processo em constante evolução.</p>\n<h4>Uma plataforma de IA operacional abrangente</h4>\n<p>Saia das decisões comuns e chegue à excelência com a IA. A Operational AI Platform da Intelie pode ajudar os setores a avançar para o próximo nível de excelência operacional, usando dados para informar melhor as decisões atuais no aqui e agora, análises preditivas para antecipar melhor o futuro e automação para aproveitar cada incremento de custo e velocidade que pode ser encontrado. Intelie LIVE é uma plataforma de IA Operacional por excelência que realmente permite melhores ações agora.</p>\n<p>O Intelie LIVE é fornecido com um conjunto de aplicativos pré-construídos, comprovados e validados em operações de campo, que agregam valor imediatamente após a instalação. Essas soluções usam canais padrão, encapsulam toda a lógica de análise de dados necessária, fornecem os recursos visuais necessários com widgets, modelos de painel e são robustas e resilientes aos ambientes de produção.</p>\n<p>Intelie LIVE é uma plataforma de IA operacional completa que fornece um mecanismo de análise de fluxo e processamento de eventos para ingestão de dados em tempo real, gerenciamento de alarmes, vigilância baseada em exceções, visualização de dados e outros. Extensíveis por design, os plug-ins Intelie Live podem transformar a plataforma para estender com sucesso qualquer recurso, como agendamento, planejamento, construção de sequência, rastreamento de custos, geração de KPI e relatórios.</p>\n<h2>Estamos com vagas abertas</h2>\n<p>A Intelie é uma empresa global, parte da Viasat. Hoje somos mais de 200 pessoas, em 5 países e com 10 nacionalidades diferentes e crescendo. Aqui todos somos especialistas em inteligência e protagonistas do nosso trabalho. Entendemos qual a nossa missão pessoal dentro da empresa, ao mesmo tempo olhamos para o todo, trabalhando em conjunto para criarmos as nossas próximas melhores ideias. Tem espaço para as suas aqui, vem!</p>\n<h4>Todas as nossas vagas são inclusivas.</h4>\n<p>Estamos em constante aprendizado para nos tornarmos uma empresa apta a todos os diversos profissionais.</p>\n<p><a href=\"https://bit.ly/live-carreira-dev-intelie\" target=\"_blank\" rel=\"noopener\">Fazer inscrição para vagas em aberto</a></p>\n<h2>Bate-popo Amadeu Barboda, Software Development Manager da Intelie</h2>\n<p><img src=\"/uploads/2022/01/tire-duvidas-amadeu.png\" alt=\"Amadeu Barboda \n\"></p>\n<p><a href=\"https://bit.ly/live-carreira-dev-intelie\" target=\"_blank\" rel=\"noopener\">ASSISTIR AGORA</a></p>\n<h2>Conheça mais sobre a Intelie</h2>\n<p><a href=\"https://content.intelie.com.br/newsletter-carreiras-intelie\" target=\"_blank\" rel=\"noopener\">Newsletter</a> \n<a href=\"https://www.linkedin.com/company/intelie\" target=\"_blank\" rel=\"noopener\">Linkedin</a> \n<a href=\"https://twitter.com/intelie\" target=\"_blank\" rel=\"noopener\">Twitter</a></p>\n","date":"2022-01-18T00:00:00.000Z","readingTime":2,"title":"Como é a carreira de desenvolvedor na Intelie","tags":["Como é a carreira de desenvolvedor na Intelie","como é a carreira de um dev","desenvolvedor","desenvolvedora","programadora","programador","frontend","backend","pipe","intelie","empresa intelie","Alisson Suassuna","tipscode","tecnologia","programação"],"description":"A Intelie ajuda seus clientes a obter visibilidade sobre negócios complexos e dinâmicos. Ao fornecer inteligência operacional e análises em tempo real, ajudamos as empresas a evitar falhas que podem causar grandes perdas em poucos minutos.","imgArticle":"/thumbnail-article/como-e-a-carreira-de-desenvolvedor-na-Intelie.png","imgHome":"/thumbnail-home/como-e-a-carreira-de-desenvolvedor-na-Intelie.png"},{"slug":"nullstack-conhecendo-o-framework-brasileiro","content":"<h1>Introdução ao NullStack</h1>\n<p>Nullstack é um framework fullstack para a construção de aplicações web progressivas. Ele conecta uma camada de IU (interface do usuário) com gestão de estado a microsserviços especializados no mesmo componente usando o JavaScript puro (vanilla).</p>\n<p>Os componentes Nullstack são classes JavaScript normais com o front-end e back-end juntos. O objetivo é que o desenvolvedor tenha uma aplicação full-stack por padrão, sem lidar com tantas as decisões.</p>\n<p>O Nullstack permite que você faça sua aplicação sair funcionando o mais rápido possível, mas também é flexível o suficiente para que você possa refatorá-la a hora que achar necessário.</p>\n<p>Considere o exemplo abaixo, onde um componente com estado usa uma função de servidor para ler dados do banco e retornar para o cliente:</p>\n<pre><code><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">\"nullstack\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BookPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n  title <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  description <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">findBookBySlug</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> database<span class=\"token punctuation\">,</span> slug <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> database\n      <span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"books\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> slug <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">initiate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> params <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> book <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">findBookBySlug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">slug</span><span class=\"token operator\">:</span> params<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      page<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span>\n\n      Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      page<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> BookPage<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>No exemplo acima, o Nullstack do lado do servidor renderiza e retorna o HTML pronto, isso ajuda a questão do SEO (Search Engine Optimization) quando o usuário entra na aplicação por esta rota. Quando o usuário navega para esta página, uma chamada de API é feita para um microsserviço onde é gerado automaticamente retornando um JSON e atualizando o DOM.</p>\n<h2>Como funciona o Nullstack?</h2>\n<p>O Nullstack gera dois pacotes: um para o servidor e outro para o cliente com o mínimo de dependências possíveis. O framework é responsável por decidir quando usar uma chamada de API ou usar uma função local; o programador só precisa pensar no comportamento de suas funções.</p>\n<p>Cada ambiente tem seu contexto, que é um proxy passado para cada função. O recurso torna o Nullstack um framework horizontal em vez de uma árvore, o que é muito importante se você trabalha em um projeto dinâmico, onde as alterações precisam ser feitas constatemente.</p>\n<p>No exemplo abaixo, estamos analisando o parâmetro &quot;README&quot; e quando a aplicação é iniciada, salvamos o seu valor no contexto do nosso servidor:</p>\n<pre><code><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">\"nullstack\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> readFileSync <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Remarkable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"remarkable\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">About</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"README.md\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> md <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Remarkable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    context<span class=\"token punctuation\">.</span>readme <span class=\"token operator\">=</span> md<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getReadme</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> readme <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> readme<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">initiate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>context<span class=\"token punctuation\">.</span>readme<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      context<span class=\"token punctuation\">.</span>readme <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getReadme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> readme <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>article</span> <span class=\"token attr-name\">html</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>readme <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> About<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>O cliente chama uma função de servidor e salva o conteúdo README no context do cliente que está disponível offline em outras visualizações. Ambos readFileSynce remarkablesão excluídos do pacote do cliente. Existem muitas otimizações neste código, mas o componente parece quase tão simples quanto uma versão mais básica.</p>\n<h2>Diferenças do Nullstack para outros frameworks?</h2>\n<p>O framework Nullstack, desde o início, foi pensado como uma solução completa que usa o mesmo conceito para resolver todos os problemas. Essa abordagem torna o Nullstack muito fácil de aprender, já que pegar os primeiras conceitos é o suficiente para permitir que você codifique com a stack.</p>\n<p>A stack tenta juntar todas as boas coisas de frameworks como React, Vue, Next entre outros em um único, porém não perdendo a essência da linguagem JavaScript.</p>\n<p>Atualmente, o mercado está tentando usar uma única abordagem &quot;tamanho único&quot;, onde React ou agora o mais novo queridinho NextJS é a solução para tudo. Se você pensar em frameworks como sapatos, o Nullstack é apenas um sapato que se ajusta ao tamanho do problema em questão e busca deixar o desenvolvedor mais confortável.</p>\n<h2>Um convite especial</h2>\n<p>Convido a todos que vem acompanhando o TipsCode a contribuir com esse projeto tão legal e criado por um Brasileiro, a TipsCode hoje é uma grande parceira do projeto Nullstack, hoje o site da Tips é criado com Nullstack e foi um desafio que me trouxe muito aprendizado e lhe convido a fazer o mesmo.</p>\n<p>Acesse <a href=\"https://github.com/nullstack/nullstack\" target=\"_blank\" rel=\"noopener\">o github do framework</a> e deixa uma estrelinha para ajudar o projeto a ganhar visibilidade!</p>\n<h2>Conclusão</h2>\n<p>Sem dúvidas tenho certeza que ainda vamos ver falar muito desse framework, então de uma chance a ele, da uma olhadinha com mais detalhes, no canal da TipsCode tem alguns vídeos bem legais, vou linkar aqui para você da uma olhada.</p>\n<p><a href=\"https://youtu.be/jwEUGTy2RKs\" target=\"_blank\" rel=\"noopener\">Como criar um app com nullstack</a></p>\n<h2>Créditos</h2>\n<p>Este artigo traduz com algumas alterações uma <a href=\"https://survivejs.com/blog/nullstack-interview/\" target=\"_blank\" rel=\"noopener\">Entrevista com o Autor do Framework</a> para o site SurviveJS</p>\n","date":"2021-05-27T00:00:00.000Z","readingTime":6,"title":"NullStack: Conhecendo o framework Brasileiro","tags":["nullstack","framework","desenvolvimento web","fullstack","tipscode","Alisson Suassuna","Javascript"],"description":"Nullstack é um framework fullstack para a construção de aplicaçõess web progressivos. Ele conecta uma camada de IU (interface gráfica) com monitoração de estado a microsserviços especializados no mesmo componente usando o JavaScript puro (vanila).","imgArticle":"/thumbnail-article/framework-nullstack.png","imgHome":"/thumbnail-home/framework-nullstack.png"},{"slug":"melhores-praticas-em-nodejs-para-ambientes-de-producao","content":"<p>Esta é uma tentativa de listar as Melhores práticas em NodeJS e as mais importantes para desenvolver e implantar em um ambiente de produção.</p>\n<p>Eu mesmo venho trabalhando nessa tecnologia há algum tempo. Percebo seu enorme potencial e lugar no processo de desenvolvimento. Com forte concorrência de linguagens como Python e Golang, o NodeJS provou sua utilidade em casos de uso apropriados.</p>\n<p>Antes de me aprofundar nas práticas recomendadas?, Gostaria de fazer uma breve introdução ao que é um padrão de microsserviço. Então vamos lá..</p>\n<h2>O que são microsserviços?</h2>\n<p>Microsserviços - também conhecido como arquitetura de microsserviços - é um estilo de arquitetura que estrutura uma aplicação como uma coleção de serviços que são:</p>\n<ul>\n<li>Altamente sustentável e testável;</li>\n<li>Fracamente acoplado;</li>\n<li>Independentemente Implantável;</li>\n<li>Organizado envolta do negócio.</li>\n</ul>\n<p>A arquitetura de microsserviço permite a entrega / implantação contínua de aplicações grandes e complexos. Também permite que uma organização desenvolva sua stack de tecnologia e essa sem dúvida é uma das Melhores práticas em NodeJS.</p>\n<h2>Como sabe se preciso de microsserviços?</h2>\n<p>Inicialmente, quando você está apenas começando a trabalhar em seu MVP, talvez não precise usar microsserviços. A escala do eixo Y pode não ser sua agenda agora. Mas quando o produto começa a amadurecer e às vezes muito cedo, quando você precisa lidar com o dimensionamento, a decomposição em módulos funcionais faz mais sentido, pois o próprio negócio está se decompondo. Este será o ponto certo para começar a examinar o padrão de arquitetura de microsserviços.</p>\n<p><a href=\"/ebook-gratuito-html\"><img src=\"/uploads/2020/09/ebook-guia-completo-html.png\" alt=\"Ebook HTML\"></a></p>\n<p>Ebook HTML</p>\n<p>Os microsserviços são mais comumente considerados durante a substituição de uma aplicação monolítico que costumava ser bastante comum até recentemente, quando as soluções de conteinerização como o Docker começaram a governar o mundo do DevOps. Vamos falar mais sobre adiante.</p>\n<p>Seria injusto se eu continuasse sem mencionar o Domain Driven Design (DDD). É uma estratégia muito popular para decompor seu produto em módulos funcionais. Portanto, é muito útil criar microsserviços.</p>\n<h2>O que é um domínio de acordo com DDD?</h2>\n<p>Cada problema que você está tentando resolver é um domínio.</p>\n<p>Cada domínio é subdividido em contextos limitados mutuamente exclusivos. Esses contextos nada mais são do que áreas separadas desse problema específico.</p>\n<p>Em um padrão de microsserviço, cada contexto limitado se correlaciona a um microsserviço. Os padrões DDD ajudam a compreender a complexidade do domínio. Para o modelo de domínio para cada contexto limitado, você identifica e define as<br>\nentidades, objetos de valor e agregados que modelam seu domínio.</p>\n<p>Dependendo da complexidade do seu software, você pode escolher os princípios DDD ou executar uma abordagem mais simples.</p>\n<p>O objetivo é obter um modelo de domínio altamente coeso e fracamente acoplado. Para isso, siga esta abordagem por exemplo:</p>\n<p><img src=\"/uploads/2021/01/modelo-de-dominio-1024x178.png\" alt=\"Melhores práticas em NodeJS\"></p>\n<p>Modelo</p>\n<p>Daqui em diante, falarei mais sobre as práticas específicas do NodeJS. E o que quero dizer é que os microsserviços e o DDD ajudam a avaliar o verdadeiro potencial do NodeJS, no entanto. A pergunta que fica no ar é si realmente é completo? Então vamos ver com mais detalhes e você tira suas próprias conclusões beleza?.</p>\n<h2>Qual Design Pattern usar ao se utilizar o NodeJs?</h2>\n<p>Os Padrões de Projeto referem-se ao projeto de software usando certos padrões conhecidos por vários desenvolvedores. E esses padrões vão lhe auxilia a fazer as Melhores práticas em NodeJS.</p>\n<p>Existem vários padrões de design que podemos usar. Eu gostaria de apresentar e / ou recapitular para desenvolvedores que já conhecem um padrão chamado Padrão de Repositório.</p>\n<p>Este padrão torna mais fácil separar a lógica MVC enquanto também torna mais fácil lidar com a definição e interação do modelo com o resto da lógica.</p>\n<p>Isso consiste de:</p>\n<ul>\n<li><strong>Controlador</strong>: lida apenas com a solicitação e resposta e atributos associados. Ele também não terá nenhuma lógica de negócios ou definição de modelo ou associações de modelo. (nome da pasta: controladores);</li>\n<li><strong>Serviço</strong>: contém lógica de negócios para seu microsserviço. O controle passa do controlador para um serviço. É um relacionamento 1: 1 entre um controlador e seu serviço e um relacionamento 1: muitos entre o serviço e os repositórios. (nome da pasta: serviços);</li>\n<li><strong>Repositório</strong>: interage com os modelos que fazem parte da pasta de modelos. Qualquer consulta ao banco de dados por meio da camada de modelo será formada aqui. Não terá nenhuma lógica de negócios. (nome da pasta: repositórios);</li>\n<li><strong>Modelo</strong>: contém a definição do modelo, associações, funções e etc;</li>\n<li><strong>Utilitários</strong>: conterá classes / funções auxiliares que podem ser usadas como serviços. Ex: um utilitário Redis que possui todas as funções necessárias para interagir com o Redis. (nome da pasta: utilitários);</li>\n<li><strong>Caso de teste</strong>: Isso incluirá casos de teste de unidade contra métodos de controlador para garantir cobertura máxima de código. (nome da pasta: especificação)</li>\n</ul>\n<h2>Módulos de cluster</h2>\n<p>Uma única instância de Node.js é executada em uma única thread. Para tirar proveito dos sistemas multi-core, o usuário às vezes vai querer lançar um cluster de processos Node.js para lidar com a carga.</p>\n<p>O módulo de cluster permite a criação fácil de processos filhos que compartilham portas de servidor.</p>\n<p>Observe que é ideal usar um processo por contêiner ao usar a conteinerização do Docker para implantação por meio de microsserviços. Conseqüentemente, os módulos de cluster não são úteis ao usar a dockerização.</p>\n<h2>Como lidar com o fluxo de controle no NodeJS</h2>\n<p>Ao usar retornos de chamada ou promessas, veja essas bibliotecas elas vão ajudar com certeza a Melhores práticas em NodeJS:</p>\n<ul>\n<li>Async ( <a href=\"https://www.npmjs.com/package/async\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/async</a> )</li>\n<li>Vasync (como melhora o rastreamento de operação) <a href=\"https://www.npmjs.com/package/vasync\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/vasync</a></li>\n<li>Bluebird (lidar com promessas, por exemplo, Promise.all etc.) <a href=\"https://www.npmjs.com/package/bluebird\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/bluebird</a></li>\n</ul>\n<h2>Loop</h2>\n<ul>\n<li><strong>Loop de série</strong>: executando cada passo um por um em ordem;</li>\n<li><strong>Loop atrasado</strong>: loop com um tempo limite;</li>\n<li><strong>Loop paralelo</strong>: coleta todas as promessas em um loop e executa em paralelo</li>\n</ul>\n<h2>Ferramentas úteis de linting</h2>\n<p>As ferramentas de linting analisam seu código estaticamente (sem executá-lo). Eles identificam possíveis bugs ou padrões perigosos. Padrões como o uso de variáveis ​​não declaradas ou instruções de “caso” dentro de um switch sem uma instrução de “quebra”.</p>\n<p>Habilitar o modo estrito em sua base de código com 'usar estrito' pode ajudar seu código a falhar rapidamente se o analisador JavaScript puder identificar um comportamento global vazado ou mau semelhante.</p>\n<p>Exemplos de linters são Javascript lint e JS lint.</p>\n<h2>Como lidamos com o Logging?</h2>\n<p>Alguns pacotes npm comumente usados ​​são:</p>\n<ul>\n<li>Winston (<a href=\"https://www.npmjs.com/package/winston\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/winston</a>);</li>\n<li>Bunyan (<a href=\"https://www.npmjs.com/package/bunyan\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/bunyan</a>)</li>\n</ul>\n<p>Formato de registro possível:</p>\n<p>Para sistemas distribuídos como microsserviços, você gostaria de explorar o rastreamento distribuído usando ZipKin etc.</p>\n<p>Uma observação sobre os pacotes NPM: você deve usar um pacote apenas se ele resolver um problema que você não consegue resolver sozinho. Realize auditorias de npm regularmente para encontrar problemas críticos com suas dependências de npm.</p>\n<h2>Tratamento de exceções não detectadas</h2>\n<p>Por padrão, o Node.js lida com essas exceções imprimindo o rastreamento da pilha em <strong>stderr</strong> e saindo com o código 1, substituindo qualquer <strong>process.exitCode</strong> definido anteriormente</p>\n<p>Nota: Adicionar um manipulador para o evento 'uncaughtException' substitui esse comportamento padrão.</p>\n<p>Como alternativa, altere o process.exitCode no manipulador 'uncaughtException' que resultará na saída do processo com o código de saída fornecido. Caso contrário, na presença de tal manipulador, o processo será encerrado com 0.</p>\n<p>process.exit (0) - finalização bem-sucedida<br>\nprocess.exit (1) - finalização malsucedida</p>\n<h2>Lidar com rejeições não tratadas</h2>\n<p>As promessas são onipresentes no código Node.js e, às vezes, acorrentadas a uma lista muito longa de funções que retornam promessas e assim por diante.</p>\n<p>Não usar um manipulador de rejeição .catch (…) apropriado fará com que um evento unhandledRejection seja emitido. Se não for detectado e inspecionado adequadamente, você pode roubar sua única chance de detectar e possivelmente corrigir o problema.</p>\n<h2>Dica bônus</h2>\n<p>console.time () e console.timeEnd ()<br>\nO objeto de console possui métodos time () e timeEnd () que ajudam a analisar o desempenho de partes do seu código.</p>\n<p>Esta não é uma solução para produção, mas pode ser usada quando você não tiver ferramentas melhores.</p>\n<h3>Recomendação</h3>\n","date":"2021-01-08T00:00:00.000Z","readingTime":6,"title":"Melhores práticas em NodeJS para Ambientes de Produção","categories":["nodejs"],"tags":["alisson-suassuna","backend","javascript","melhores-praticas","melhores-praticas-em-nodejs","nodejs","tipscode"],"description":"Esta é uma tentativa de listar as Melhores práticas em NodeJS e as mais importantes para desenvolver e implantar em um ambiente de produção.","imgArticle":"/thumbnail-article/melhores-praticas-nodejs.png","imgHome":"/thumbnail-home/melhores-praticas-nodejs.png"},{"slug":"create-react-app-crie-aplicacoes-react-rapidamente","content":"<p>Iniciar um novo projeto React não é tão simples. Em vez de mergulhar diretamente no código e dar vida a sua aplicação, você precisa gastar tempo configurando as ferramentas de construção certas para configurar um ambiente de desenvolvimento local, teste de unidade e produção. Felizmente, existi uma forma com 0 configuração que é através da ferramenta create-react-app.</p>\n<p>Create-React-App é uma ferramenta de linha de comando criada pelo Facebook que permite gerar um novo projeto React, e usa o <strong>webpack</strong> pré-configurado para desenvolvimento. Há muito tempo ele se tornou uma parte integrante do ecossistema React, que elimina a necessidade de manter pipelines de construção complexos em seu projeto, permitindo que você se concentre na criação e não em configuração.</p>\n<h2>Como Funciona o Create-React-App ?</h2>\n<p>Create React App é uma ferramenta autônoma que pode ser executada tanto com npm quanto com Yarn.</p>\n<p>Você pode gerar e executar um novo projeto usando npm apenas com alguns comandos, depois que a ferramenta estiver instalada em sua máquina:</p>\n<pre><code>npm install <span class=\"token operator\">-</span>g create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>app <span class=\"token comment\">// comando para instalação via terminal </span>\n</code></pre>\n<p>Depois que você já instalou a ferramenta, para criar um projeto é muito simples:</p>\n<pre><code>npx create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>app <span class=\"token punctuation\">[</span>nome<span class=\"token operator\">-</span><span class=\"token keyword\">do</span><span class=\"token operator\">-</span>webapp<span class=\"token punctuation\">]</span>\ncd <span class=\"token punctuation\">[</span>nome<span class=\"token operator\">-</span><span class=\"token keyword\">do</span><span class=\"token operator\">-</span>webapp<span class=\"token punctuation\">]</span>\nnpm start <span class=\"token comment\">// Comando para subir a aplicação</span>\n</code></pre>\n<p>Caso use o Yarn, o comando será assim:</p>\n<pre><code>yarn create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>app <span class=\"token punctuation\">[</span>nome<span class=\"token operator\">-</span><span class=\"token keyword\">do</span><span class=\"token operator\">-</span>webapp<span class=\"token punctuation\">]</span>\ncd <span class=\"token punctuation\">[</span>nome<span class=\"token operator\">-</span><span class=\"token keyword\">do</span><span class=\"token operator\">-</span>webapp<span class=\"token punctuation\">]</span>\nyarn start <span class=\"token comment\">// Comando para subir a aplicação</span>\n</code></pre>\n<p>Essa é a estrutura do projeto quando criado com o creacte-react-app:</p>\n<p><img src=\"/uploads/2020/12/Estrutura-do-projeto-criado-com-create-react-app.png\" alt=\"create-react-app\"></p>\n<p>Estrutura do Create-React-app</p>\n<p>Ele também adicionará um pacote <strong>react-scripts</strong> ao seu projeto que conterá todos os scripts de configuração e construção. Em outras palavras, seu projeto depende do <strong>react-scripts</strong>, não do <strong>create-react-app</strong> si mesmo. Assim que a instalação for concluída, você pode iniciar o servidor de desenvolvimento e começar a trabalhar em seu projeto.</p>\n<h2>Recursos Básicos</h2>\n<h3>Servidor de Desenvolvimento Local</h3>\n<p>A primeira coisa de que você precisa é um ambiente de desenvolvimento local. A execução npm iniciará um servidor de desenvolvimento webpack com um observador que irá recarregar automaticamente a aplicação assim que você mudar alguma coisa.</p>\n<p>A partir da versão 4, o <strong>create-react-app</strong> oferece suporte à atualização rápida do React como uma alternativa à substituição de módulo ativo. Como seu predecessor, isso nos permite atualizar rapidamente partes da nossa aplicação após fazer alterações na base de código, mas também possui alguns novos recursos.</p>\n<p>O <strong>Fast Reload</strong> tentará recarregar apenas a parte modificada da aplicação, preservar o estado dos componentes funcionais e <a href=\"/react-hooks-guia-completo-passo-a-passo/\">hooks</a> e recarregar automaticamente a aplicação após corrigir um erro de sintaxe por exemplo.</p>\n<p>Você também pode servir sua aplicação por HTTPS, definindo a variável HTTPS para <strong>true</strong> antes de executar o servidor.</p>\n<p>A aplicação será gerado com muitos recursos integrados.</p>\n<p><a href=\"/ebook-gratuito-html\"><img src=\"/uploads/2020/09/ebook-guia-completo-html.png\" alt=\"Ebook HTML\"></a></p>\n<p>Ebook HTML</p>\n<h3>ES6 e ES7</h3>\n<p>O aplicativo vem com seu próprio preset Babel - babel-preset-react-app - para suportar um conjunto de recursos ES6 e ES7. Alguns dos recursos suportados são:</p>\n<ul>\n<li>Async/await;</li>\n<li>Object Rest / Spread Properties;</li>\n<li>Dynamic import();</li>\n<li>Class Fields e Static Properties.</li>\n</ul>\n<p>Observe que Create-React-App não fornece nenhum polyfills para recursos de tempo de execução, portanto, se você precisar de algum deles, deverá incluí-los você mesmo.</p>\n<h3>Importação de Ativos</h3>\n<p>Você pode importar arquivos CSS, imagens ou fontes de seus módulos JavaScript que permitem agrupar arquivos usados ​​em seu projeto. Assim que a aplicação for criado, o Create-React-App copiará esses arquivos para a pasta de construção. Aqui está um exemplo de importação de uma imagem:</p>\n<pre><code><span class=\"token keyword\">import</span> image <span class=\"token keyword\">from</span> <span class=\"token string\">'./tipscode.png'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Podemos usar também recursos CSS como:</p>\n<pre><code><span class=\"token punctuation\">.</span>image <span class=\"token punctuation\">{</span>\n  background<span class=\"token operator\">-</span>image<span class=\"token operator\">:</span> <span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>tipscode<span class=\"token punctuation\">.</span>png<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3>Estilo</h3>\n<p>Conforme mencionado na seção anterior, Criar aplicação React permite adicionar estilos apenas importando os arquivos CSS necessários. Ao construir o projeto, todos os arquivos CSS serão concatenados em um único pacote e adicionados à pasta de construção.</p>\n<p>A ferramenta Create React App também oferece suporte a módulos CSS. Por convenção, os arquivos nomeados como <strong>*.module.css</strong> são tratados como módulos CSS. Essa técnica nos permite evitar conflitos de seletores CSS, uma vez que Create React App criará seletores de classe exclusivos nos arquivos CSS resultantes.</p>\n<p>Como alternativa, se preferir usar pré-processadores CSS, você pode importar arquivos Sass .scss . No entanto, você precisará instalar o pacote <strong>node-sass</strong> separadamente.</p>\n<p>Além disso, o <strong>Create-React-App</strong> fornece uma maneira de adicionar redefinições CSS adicionando <strong>@import-normalize</strong>; qualquer lugar em seus arquivos CSS. Os estilos também passam por pós-processamento, que os reduz, adiciona prefixos de fornecedores usando Auto prefixer e polyfills, recursos sem suporte, como allpropriedade, propriedades personalizadas e intervalos de consulta de mídia.</p>\n<h3>Execução de testes de unidade</h3>\n<p>A execução do comando <strong>npm test</strong> executará testes usando <strong>Jest</strong> e iniciará um observador para executá-los novamente sempre que você mudar algo:</p>\n<p><img src=\"/uploads/2020/12/teste-react-1024x609.png\" alt=\"\"></p>\n<p>React Teste</p>\n<p>Temos um artigo bem completo sobre testes com React, caso tenha interesse <a href=\"/react-guia-completo-para-testes/\">clique aqui para ler</a></p>\n<p><a href=\"https://jestjs.io/pt-BR/\" target=\"_blank\" rel=\"noopener\">Jest</a> é um poderoso Framework de Testes em JavaScript com um foco na simplicidade, é uma alternativa ao <strong>Mocha</strong> ou <strong>Karma</strong>. Ele executa os testes em um ambiente Node em vez de em um navegador real, mas fornece alguns dos globais específicos do navegador usando <a href=\"https://github.com/jsdom/jsdom\" target=\"_blank\" rel=\"noopener\">jsdom</a>.</p>\n<p>O Jest também vem integrado com seu sistema de controle de versão e, por padrão, só executará testes em arquivos alterados desde seu último commit.</p>\n<h3>EsLint</h3>\n<p>Durante o desenvolvimento, seu código também será executado por meio do <a href=\"https://eslint.org/\" target=\"_blank\" rel=\"noopener\">ESLint</a>, um analisador de código estático que o ajudará a detectar erros durante o desenvolvimento.</p>\n<h2>Criando um Pacote para Produção</h2>\n<p>Quando você finalmente tiver algo para implantar, poderá criar um pacote de produção usando o comando <strong>npm run build</strong>. Isso irá gerar uma construção otimizada de seu projeto, pronta para ser implantada em seu ambiente. Os artefatos gerados serão colocados na pasta de construção:</p>\n<p><img src=\"/uploads/2020/12/em-producao.png\" alt=\"Create-react-app\"></p>\n<p>Pronto para Fazer o Deploy</p>\n<h3>Detalhes sobre o Deploy que você deverá está atento</h3>\n<p>Como a construção de seu projeto é com Create React App ele consiste apenas em arquivos estáticos, existem diferentes maneiras de implantá-los em seu ambiente remoto. Você pode usar um servidor Node.js se estiver executando em um ambiente Node.js ou servir o aplicação usando um servidor web diferente, como NGINX.</p>\n<p>A seção de implantação na <a href=\"https://create-react-app.dev/docs/deployment/\" target=\"_blank\" rel=\"noopener\">documentação</a> oficial fornece uma visão geral de como implantar o aplicativo no Azure, AWS, Heroku, Netlify e outros ambientes de hospedagem populares.</p>\n<h2>Recursos de Desenvolvimento</h2>\n<p>Antes de entrar nesta seção quero deixar um avisor importante, estou criando uma série de aulas usando o React e o create-react-app lá no canal TipsCode, então se deseja aprender mais comigo vai lá e da uma olhada.</p>\n<p>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/pCkw6b5HRkM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;</p>\n<h3>Variáveis de Ambiente</h3>\n<p>Você pode usar variáveis ​​de ambiente do Node para injetar valores em seu código no momento da construção. O Create React procurará automaticamente quaisquer variáveis ​​de ambiente começando com <strong>REACT_APP_</strong> e as disponibilizará no global <strong>process.env</strong>. Essas variáveis ​​podem estar em um arquivo chamado <strong>.env</strong>:</p>\n<pre><code><span class=\"token constant\">REACT_APP_BACKEND</span><span class=\"token operator\">=</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>novo<span class=\"token operator\">-</span>api<span class=\"token punctuation\">.</span>com\n<span class=\"token constant\">REACT_APP_BACKEND_USER</span><span class=\"token operator\">=</span>root\n</code></pre>\n<p>Você também pode referencia no código:</p>\n<pre><code><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">REACT_APP_SECRET_CODE</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span>endpoint<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3>Proxing para Back-end</h3>\n<p>Se a sua aplicação trabalhar com um back end remoto, talvez você precise ser capaz de enviar solicitações durante o desenvolvimento local para ignorar o <strong>CORS</strong>. Isso pode ser configurado adicionando um campo de proxy ao seu arquivo package.json:</p>\n<pre><code><span class=\"token string-property property\">\"proxy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://localhost:6000\"</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<p>Dessa forma, o servidor encaminhará para o endereço fornecido qualquer solicitação que não aponte para um arquivo estático.</p>\n<h3>Divisão de Código</h3>\n<p>Criar aplicação React com o create-react-app vai lhe oferece suporte à divisão de código usando a diretiva <strong>import () dinâmica</strong>. Em vez de retornar os valores exportados pelo módulo, ele retornará uma Promise que resolve esses valores. Como resultado, os módulos importados dessa forma não serão incluídos no pacote final, mas serão construídos em arquivos separados. Isso permite que você reduza o tamanho do pacote final e carregue o conteúdo sob demanda.</p>\n<h3>Suporte ao TypeScript</h3>\n<p>Você pode habilitar o TypeScript para obter os benefícios da análise de tipo estático ao gerar um novo projeto. Isso pode ser feito usando um modelo não padrão diferente para gerar o projeto:</p>\n<pre><code>npx create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>app novo <span class=\"token operator\">--</span>template typescript\n</code></pre>\n<p>Você também pode adicionar suporte a TypeScript a um projeto existente, conforme descrito na documentação .</p>\n<h3>Progressive Web Apps</h3>\n<p>Da mesma forma, você pode adicionar suporte aplicações progressivas web. Você pode usar <strong>service workers</strong> adicionando um src/service-worker.jsarquivo. A partir da v4, ele será injetado no aplicativo usando a biblioteca Workbox .</p>\n<p>Para habilitar service workers em um novo projeto, eles precisam ser gerados a partir de um modelo personalizado:</p>\n<pre><code>npx create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>app novo<span class=\"token operator\">-</span>app <span class=\"token operator\">--</span>template cra<span class=\"token operator\">-</span>template<span class=\"token operator\">-</span>pwa\n\n\nnpx create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>app my<span class=\"token operator\">-</span>app <span class=\"token operator\">--</span>template cra<span class=\"token operator\">-</span>template<span class=\"token operator\">-</span>pwa<span class=\"token operator\">-</span>typescript\n</code></pre>\n<h3>Web Vitals</h3>\n<p>Vai permite medir o desempenho e a capacidade de resposta da sua aplicação. Isso é feito monitorando as métricas definidas pelo web vitals e medidas usando a biblioteca web-vitals . As métricas incluem Largest Contentful Paint , que mede o desempenho de carregamento, First Input Delay e Cumulative Layout Shift para resposta.</p>\n<p>A ferramenta create-react-app oferece uma função conveniente para rastrear todas as métricas disponíveis:</p>\n<pre><code><span class=\"token comment\">// index.js</span>\n\n<span class=\"token function\">reportWebVitals</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3>Recusando</h3>\n<p>Se em algum momento você sentir que os recursos fornecidos não são mais suficientes para o seu projeto, você pode cancelar o uso react-scripts executando <strong>npm run eject</strong>. Isso copiará a configuração do webpack e criará scripts de <strong>react-scripts</strong> seu projeto e removerá a dependência. Depois disso, você está livre para modificar a configuração da maneira que achar melhor.</p>\n<p>Como alternativa, você também pode bifurcar react-scriptse manter seu branch com os recursos de que precisa. Isso pode ser mais fácil, caso você tenha muitos projetos para manter.</p>\n<h2>Conclusão</h2>\n<p>Se você está procurando iniciar um novo projeto React, te recomendo muito usar o create-react-app. Criar aplicação React permitirá que você comece a trabalhar rapidamente em sua aplicação em vez de escrever outra configuração de pacote web. Também torna mais fácil atualizar suas ferramentas de construção com um único comando ( <code>**npm install react-scripts@latest**</code>) - algo que normalmente é uma tarefa difícil e demorada.</p>\n<p>A ferramente Create React App tornou-se parte integrante do ecossistema React. Quer você o use para montar um protótipo rápido ou para criar seu próximo grande projeto, você economizará muitas horas de tempo de desenvolvimento.</p>\n<h2>Venha ser meu Aluno(a)</h2>\n<p><a href=\"/desenvolvedor-full-stack-turbo\"><img src=\"/uploads/2020/11/PROJETO-CURSO-DESENVOLVEDOR-FULL-STACK-TURBO.jpg\" alt=\" CURSO DESENVOLVEDOR FULL STACK TURBO\"></a></p>\n<p>CURSO DESENVOLVEDOR FULL STACK TURBO</p>\n<p>[</p>\n<h6>Saiba Mais</h6>\n<p>Venha Turbinar seus estudos com o TipsCode</p>\n<p>](/desenvolvedor-full-stack-turbo)</p>\n<h3>Venha Turbinar Seus estudos</h3>\n<h5>O que você vai aprender neste Curso</h5>\n<ul>\n<li>HTML5, CSS3 e JavaScript (ES+);</li>\n<li>Lógica de Programação;</li>\n<li>React;</li>\n<li>Jquery;</li>\n<li>Bootstrap 4.5 (Será atualizado para a versão 5);</li>\n<li>NodeJS, EJS e ExpressJS;</li>\n<li>MongoDb (Mongose);</li>\n<li>SQL;</li>\n<li>Git (Controle de Versão);</li>\n<li>Terminal Linux;</li>\n<li>Autenticação e Segurança;</li>\n<li>Deploy de Aplicações.</li>\n</ul>\n<h5>Bônus</h5>\n<ul>\n<li>Mentorias (Em formato de Lives) Todos os Meses;</li>\n<li>Como Vender Software;</li>\n<li>Entrevistas com Pessoas de Sucessos;</li>\n<li>Engenharia de Software;</li>\n<li>Dominando o Linux;</li>\n<li>Projeto Calculadora com React.</li>\n<li>Projeto Clone do Instagram.</li>\n</ul>\n<p>[</p>\n<h6>Saiba Mais !</h6>\n<p>Venha Turbinar seus Estudos com o TipsCode</p>\n<p>](/desenvolvedor-full-stack-turbo)</p>\n","date":"2020-12-16T00:00:00.000Z","readingTime":9,"title":"Create-React-App: Crie Aplicações React Rapidamente","description":"Iniciar um novo projeto React não é tão simples. Em vez de mergulhar diretamente no código e dar vida a sua aplicação, você precisa gastar tempo configurando as ferramentas de construção certas para configurar um ambiente de desenvolvimento local, teste de unidade e produção. Felizmente, existi uma forma com 0 configuração que é através da ferramenta create-react-app.","imgArticle":"/thumbnail-article/create-react-app-crie-aplicacoes-react-rapidamente.png","imgHome":"/thumbnail-home/create-react-app-crie-aplicacoes-react-rapidamente.png"},{"slug":"curso-desenvolvedor-full-stack-turbo-tipscode","content":"<p>Opa Alisson aqui, bom há pouco mais de 11 meses comecei o TipsCode com o objetivo de compartilha o pouco do meu conhecimento sobre programação web. E o TipsCode foi ganhando forma e o pessoal que via meus vídeos que lia meus artigos começaram a gosta do meu jeito simples de explicar e ensinar. Por esse motivo criei o curso curso desenvolvedor full stack turbo</p>\n<p>Hoje os <a href=\"https://www.youtube.com/tipscode\" target=\"_blank\" rel=\"noopener\">vídeos do canal</a> e o <a href=\"https://www.tipscode.com.br\" target=\"_blank\" rel=\"noopener\">blog TipsCode</a> alcança mais de 4.000 mil estudantes por mês, isso é incrível ver tantas pessoas aprendendo algo comigo. Veja alguns comentários sobre o TipsCode.</p>\n<h2>O que estão falando sobre o TipsCode</h2>\n<p>&quot;Não sou bom em fazer depoimentos, mas posso falar que tudo o que eu aprendi hoje foi graça a seus conteúdos entre outros, sou de uma cidade pequena chamada Ouro Verde de Goiás próximo a Brasília, lugar onde é bem difícil ter acesso a educação e oportunidade em área tecnológica, mas graças a Deus conteúdos aprendi a me virar na internet sem precisar sair de casa.&quot;</p>\n<p>Daniel ChristianOuro Verde - Goiás</p>\n<p>&quot;Bom , seu conteúdo é fantástico e de fácil entendimento onde as pessoas que assistem (pelo menos eu) podem absorver com facilidade,pois você tem paciência na explicação, fala tudp detalhado e claro com competência. Os curso no qual você disponibilizou me ajudou e acredito que ajudou muitas pessoas,pois é uma área que está se expandindo bastante e necessita de pessoas capacitadas e com entendimento para ela, então você estar abrindo portas. Você é um exemplo de superação. Muito Obrigado mesmo!!!! :)&quot;</p>\n<p>Marcelo Ivo F. oliveira Company2</p>\n<p>&quot;Simplesmente demais e direto, apresentando de forma prática como criar um game usando Javascript do Zero.&quot;</p>\n<p>Adriano</p>\n<h2>As inscrições para o curso Desenvolvedor Full Stack Turbo então abertas</h2>\n<p>Muitos desses alunos que já me acompanhavam pedia um curso completo, com uma ordem cronológica das coisas um passo a passo e por muito tempo eu relutei em criar um curso pois eu olhava para o mercado e via muitos cursos bons disponíveis, porém vi que tinha algo faltando e vi a real necessidade de lançar um curso com a minha simplicidade de ensinar e com módulos únicos que ninguém quer ensinar pois da muito trabalho.</p>\n<p>Então é com muito orgulho que apresento o <strong>Curso Desenvolvedor Full Stack Turbo do TipsCode</strong>, não fique de fora. Veja o que você vai aprender.</p>\n<h2>Módulos do Curso</h2>\n<p><img src=\"/uploads/2020/11/1-1024x1024.jpg\" alt=\"curso desenvolvedor full stack turbo\"></p>\n<p><img src=\"/uploads/2020/11/Page001-1024x1024.jpg\" alt=\"curso desenvolvedor full stack turbo\"></p>\n<p><img src=\"/uploads/2020/11/2-1024x1024.jpg\" alt=\"curso desenvolvedor full stack turbo\"></p>\n<p><img src=\"/uploads/2020/11/3-1-1024x1024.jpg\" alt=\"curso desenvolvedor full stack turbo\"></p>\n<h2>Mais detalhes sobre</h2>\n<p>curso desenvolvedor full stack turbo</p>\n<ul>\n<li>Pra quem é o curso? Qualquer pessoa que queira começar do zero ou aprimorar habilidades já existentes;</li>\n<li>São mais de 700 aulas até o momento;</li>\n<li>Mais de 30 Projetos práticos passo a passo</li>\n<li>Mais de 150 Exercícios</li>\n<li>São mais de 120 horas aulas;</li>\n<li>Certificado de Conclusão</li>\n<li>Super Bônus.</li>\n</ul>\n<p>[</p>\n<h6>Inscreve-se</h6>\n<p>Turbine seus estudos com esse super treinamento!</p>\n<p>](/desenvolvedor-full-stack-turbo)</p>\n<h3>Garantia incondicional de 7 dias</h3>\n<p><img src=\"/uploads/2020/11/selo-de-garantia-7-dias-1-1-1-orig_orig.png\" alt=\"desenvolvedor full stack\"></p>\n<p>[</p>\n<h6>Inscreve-se</h6>\n<p>Turbine seus estudos com esse super treinamento!</p>\n<p>](/desenvolvedor-full-stack-turbo)</p>\n<h2>Depoimentos dos Alunos</h2>\n<p>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/3Fvkl1ksGqU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;</p>\n<p>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/dufgU3KqhO8&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;</p>\n<h2>Novos bônus</h2>\n<ul>\n<li>Estrutura de Dados com JavaScript</li>\n<li>Heroku</li>\n<li>EJS</li>\n<li>Sites Responsivos</li>\n</ul>\n","date":"2020-11-27T00:00:00.000Z","readingTime":2,"title":"Curso Desenvolvedor Full Stack Turbo TipsCode","description":"Opa Alisson aqui, bom há pouco mais de 11 meses comecei o TipsCode com o objetivo de compartilha o pouco do meu conhecimento sobre programação web. E o TipsCode foi ganhando forma e o pessoal que via meus vídeos que lia meus artigos começaram a gosta do meu jeito simples de explicar e ensinar. Por esse motivo criei o curso curso desenvolvedor full stack turbo.","imgArticle":"/thumbnail-article/full-stack-turbo.png","imgHome":"/thumbnail-home/full-stack-turbo.png"},{"slug":"react-20-ferramentas-essenciais-que-voce-precisa-conhecer","content":"<p><strong><em>19 Ferramentas essenciais para o React. O ecossistema React evoluiu para uma lista crescente de ferramentas e bibliotecas de desenvolvimento. A abundância de ferramentas é um verdadeiro testemunho da popularidade do React.</em></strong></p>\n<p>Para os desenvolvedores, pode ser um exercício estonteante navegar por esse labirinto que muda a uma velocidade muito rápida. Para lhe ajudar em relação a isso fiz uma compilação com <strong>19 ferramentas essenciais</strong> para o React, abaixo está essa lista <strong>com as 19 ferramentas essenciais</strong> para o react, técnicas e habilidades.</p>\n<h2>01 - Hooks</h2>\n<ul>\n<li>Site Oficial: <a href=\"https://reactjs.org/docs/hooks-intro.html\" target=\"_blank\" rel=\"noopener\">https://reactjs.org/docs/hooks-intro.html</a></li>\n<li>Repositório: <a href=\"https://github.com/facebook/react/tree/v16.8.0\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/react/tree/v16.8.0</a></li>\n<li>Estrelas no GitHub: 157,000+</li>\n<li>Desenvolvido: Facebook</li>\n<li>Versão atual da criação do artigo: 16.14.0</li>\n<li>Colaboradores: 1.500+</li>\n</ul>\n<p>Embora não seja estritamente uma ferramenta, qualquer desenvolvedor que trabalhe com o React em 2020 precisa estar familiarizado com os Hooks. Esta é uma nova adição ao React a partir da versão 16.8, que desbloqueia recursos úteis em componentes de função. Por exemplo, o hook <strong>useState</strong> permite que um componente de função tenha seu próprio estado, enquanto <strong>useEffect</strong> permite que você execute efeitos colaterais após a renderização inicial - por exemplo, manipular o DOM ou a obtenção de dados. Os hooks podem ser usados ​​para replicar métodos de ciclo de vida em componentes funcionais e permitir que você compartilhe código entre componentes.</p>\n<p>Os seguintes hooks básicos estão disponíveis</p>\n<ul>\n<li><a href=\"https://reactjs.org/docs/hooks-state.html\" target=\"_blank\" rel=\"noopener\">useState</a> : para mutação de estado em um componente de função sem métodos de ciclo de vida;</li>\n<li><a href=\"https://reactjs.org/docs/hooks-effect.html\" target=\"_blank\" rel=\"noopener\">useEffect</a> : para executar funções pós-renderização, útil para disparar solicitações Ajax;</li>\n<li><a href=\"https://reactjs.org/docs/hooks-reference.html#usecontext\" target=\"_blank\" rel=\"noopener\">useContext</a> : para acessar dados de contexto do componente, mesmo fora dos props do componente</li>\n</ul>\n<p>Vantagens</p>\n<ul>\n<li>Mitiga a complexidade do gerenciamento de estado;</li>\n<li>Suporta componentes de função;</li>\n<li>Incentiva a separação de responsabilidades</li>\n</ul>\n<p>Desvantagens</p>\n<ul>\n<li>A troca de dados de contexto pode aumentar a carga cognitiva da aplicação</li>\n</ul>\n<p>Se você quiser mais detalhes sobre o React Hooks <a href=\"/react-hooks-guia-completo-passo-a-passo/\">clique aqui</a></p>\n<h2>02 - Componentes de Função</h2>\n<ul>\n<li>Site Oficial: <a href=\"https://reactjs.org/docs/hooks-intro.html\" target=\"_blank\" rel=\"noopener\"></a> <a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">reactjs.org/docs/components-and-props</a></li>\n<li>Repositório: <a href=\"https://github.com/facebook/react/tree/v16.12.0\" target=\"_blank\" rel=\"noopener\">github.com/facebook/react</a></li>\n<li>Estrelas no GitHub: 157,000+</li>\n<li>Desenvolvido: Facebook</li>\n<li>Versão atual da criação do artigo: 16.14.0</li>\n<li>Colaboradores: 1.500+</li>\n</ul>\n<p>Com o advento dos Hooks, os componentes de função - uma forma declarativa de criar marcação JSX sem usar uma classe - estão se tornando mais populares do que nunca. Eles abraçam o paradigma funcional porque não gerenciam o estado nos métodos de ciclo de vida. Isso enfatiza o foco na marcação da IU sem muita lógica. Como o componente depende de adereços, ele se torna mais fácil de testar. Os adereços têm uma relação de um para um com a saída renderizada. Sem dúvidas das 19 Ferramentas essenciais para o React é uma que considero mais importante.</p>\n<p>Esta é a aparência de um componente funcional no React:</p>\n<pre><code><span class=\"token keyword\">function</span> <span class=\"token function\">SenhorDeus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Vem senhor<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Saída</span>\n<span class=\"token string\">\"Vem senhor, Deus\"</span>\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Concentra-se na IU;</li>\n<li>Componente testável;</li>\n<li>Menos carga cognitiva.</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>Sem métodos de ciclo de vida</li>\n</ul>\n<p><a href=\"https://lp.tipscode.com.br/seminario-tipscode\" target=\"_blank\" rel=\"noopener\"><img src=\"/uploads/2020/11/JavaScript-NodeJS-React-1024x1024.png\" alt=\"\"></a></p>\n<p>Evento 100% gratuito</p>\n<h2>03 - Create React App</h2>\n<ul>\n<li>Site Oficial: <a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\"></a> <a href=\"https://create-react-app.dev/\" target=\"_blank\" rel=\"noopener\">https://create-react-app.dev/</a></li>\n<li>Repositório: <a href=\"https://github.com/facebook/create-react-app\" target=\"_blank\" rel=\"noopener\">github.com/facebook/create-react-app</a></li>\n<li>Estrelas no GitHub: 82,000+</li>\n<li>Desenvolvido: Facebook</li>\n<li>Versão atual da criação do artigo: 3.4.1</li>\n<li>Colaboradores: 800+</li>\n</ul>\n<p>O Create React é a ferramenta essencial para iniciar um novo projeto React. Ele gerencia todas as dependências do React por meio de um único pacote npm. Chega de lidar com Babel, webpack e etc.</p>\n<p>Basta um comando para configurar um ambiente de desenvolvimento local, com suporte React, JSX e ES6. Mas isso não é tudo. O Create React também oferece recarregamento de módulo dinâmico (suas alterações são refletidas imediatamente no navegador durante o desenvolvimento), linting automático de código, um executor de teste e um script de construção para agrupar JS, CSS e imagens para produção.</p>\n<p>É fácil começar:</p>\n<pre><code>npx create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>apa nome<span class=\"token operator\">-</span><span class=\"token keyword\">do</span><span class=\"token operator\">-</span>projeto\n</code></pre>\n<p>E é ainda mais fácil atualizar mais tarde. A cadeia de ferramentas dependência inteira é atualizado com <strong>react-scripts</strong> em <strong>package.json</strong>:</p>\n<pre><code>npm i react<span class=\"token operator\">-</span>scripts@latest\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Fácil de começar;</li>\n<li>Fácil de atualizar;</li>\n<li>Única meta</li>\n</ul>\n<p>Desvantagens</p>\n<ul>\n<li>Sem renderização do lado do servidor, mas permite a integração</li>\n</ul>\n<h2>04 - Proxy Server</h2>\n<ul>\n<li>Site Oficial: <a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\"></a> <a href=\"https://create-react-app.dev/docs/proxying-api-requests-in-development\" target=\"_blank\" rel=\"noopener\">create-react-app.dev/docs/proxying-api-requests-in-development</a></li>\n<li>Repositório: <a href=\"https://github.com/facebook/create-react-app\" target=\"_blank\" rel=\"noopener\">github.com/facebook/create-react-app</a></li>\n<li>Estrelas no GitHub: 82,000+</li>\n<li>Desenvolvido: Facebook</li>\n<li>Versão atual da criação do artigo: 3.4.1</li>\n<li>Colaboradores: 800+</li>\n</ul>\n<p>A partir da versão <strong>react-scripts@0.2.3</strong> ou superior, é possível fazer proxy de solicitações de API. Isso permite que a API de back-end e o projeto local Create React App coexistam. Do lado do cliente, fazer uma solicitação para <strong>/meu-app-api/get-data</strong> roteia a solicitação por meio do servidor proxy. Essa integração perfeita funciona tanto no desenvolvimento local quanto na pós-construção. Se o dev local for executado na porta <strong>localhost:3000</strong>, as solicitações de API passarão pelo servidor proxy. Depois de implantar ativos estáticos, ele passa por qualquer back-end que hospede esses ativos.</p>\n<p>Para definir um servidor proxy em <strong>package.json</strong>:</p>\n<pre><code><span class=\"token string-property property\">\"proxy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://localhost/meu-app-api-base-url\"</span>\n</code></pre>\n<p>Se a API de back-end estiver hospedada com um caminho relativo, defina a página inicial:</p>\n<pre><code><span class=\"token string-property property\">\"homepage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/relative-path\"</span>\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Integração perfeita com API de back-end;</li>\n<li>Elimina problemas de CORS;</li>\n<li>Fácil configuração.</li>\n</ul>\n<p>Desvantagens</p>\n<ul>\n<li>Pode precisar de uma camada de proxy do lado do servidor com várias APIs. Essa das 19 Ferramentas essenciais para o React é muito show.</li>\n</ul>\n<h2>05 - PropTypes</h2>\n<ul>\n<li>Site Oficial: <a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\"></a> <a href=\"https://www.npmjs.com/package/prop-types\" target=\"_blank\" rel=\"noopener\">npmjs.com/package/prop-types</a></li>\n<li>Repositório: <a href=\"https://github.com/facebook/prop-types\" target=\"_blank\" rel=\"noopener\">github.com/facebook/prop-types</a></li>\n<li>Estrelas no GitHub: 3,600+</li>\n<li>Desenvolvido: Facebook</li>\n<li>Versão atual da criação do artigo: 15.7.2</li>\n<li>Colaboradores: 45+</li>\n</ul>\n<p>PropTypes declara o tipo pretendido para o componente React e documenta sua intenção. Isso mostra um aviso no dev local se os tipos não corresponderem. Ele suporta todas as primitivas de JavaScript, como Boolean, Number, e String. Ele pode documentar quais adereços são necessários por meio isRequired.</p>\n<p>Por exemplo:</p>\n<pre><code><span class=\"token keyword\">import</span> PropTypes<span class=\"token punctuation\">;</span>\n\nMyComponent<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">boolProperty</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>bool<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">numberProperty</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">requiredProperty</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Intenção do componente de documentos;</li>\n<li>Mostra avisos no dev local;</li>\n<li>Suporta todos os primitivos de JavaScript</li>\n</ul>\n<p>Desvantagens</p>\n<ul>\n<li>Sem verificação de tipo de compilação</li>\n</ul>\n<h2>06 - TypeScript</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener\">typescriptlang.org/</a></li>\n<li>Repositório: <a href=\"https://github.com/Microsoft/TypeScript\" target=\"_blank\" rel=\"noopener\">github.com/Microsoft/TypeScript</a></li>\n<li>Estrelas no GitHub: 65,000+</li>\n<li>Desenvolvido: Microsoft</li>\n<li>Versão atual da criação do artigo: 4.0.3</li>\n<li>Colaboradores: 530+</li>\n</ul>\n<p>TypeScript oferece suporte a todas as bibliotecas e ferramentas React com declarações de tipo. O mesmo é um superconjunto do JavaScript, portanto, é possível desativar o verificador de tipo. Isso documenta a intenção e falha na construção quando não corresponde. Em projetos Create React App, ative-o transmitindo <strong>--template typescript</strong> ao criar seu aplicativo. O suporte TypeScript está disponível a partir da versão <strong>react-script@2.1.0.</strong></p>\n<p>Para declarar um tipo de prop:</p>\n<pre><code><span class=\"token keyword\">interface</span> <span class=\"token class-name\">MyComponentProps</span> <span class=\"token punctuation\">{</span>\n  boolProp<span class=\"token operator\">?</span><span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span> <span class=\"token comment\">// optional</span>\n  numberProp<span class=\"token operator\">?</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span> <span class=\"token comment\">// optional</span>\n  <span class=\"token literal-property property\">requiredProp</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Verificação de tipo de compilação;</li>\n<li>Ótima maneira de aprimorar suas habilidades em JavaScript;</li>\n<li>Suporta todas as ferramentas e bibliotecas React, incluindo Create React App</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>Tem uma curva de aprendizado muito alta.</li>\n</ul>\n<h2>07 - Redux</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://redux.js.org/\" target=\"_blank\" rel=\"noopener\">redux.js.org/</a></li>\n<li>Repositório: <a href=\"https://github.com/reduxjs/redux\" target=\"_blank\" rel=\"noopener\">github.com/reduxjs/redux</a></li>\n<li>Estrelas no GitHub: 54,000+</li>\n<li>Desenvolvido: Dan Abramov e Andrew Clark</li>\n<li>Versão atual da criação do artigo: 4.0.5</li>\n<li>Colaboradores: 800+</li>\n</ul>\n<p>O Redux é um contêiner de gerenciamento de estado previsível para aplicativos JavaScript. Essa ferramenta vem com um armazenamento que gerencia os dados de estado.</p>\n<p>A mutação de estado só é possível por meio de uma mensagem de despacho. O objeto de mensagem contém um tipo que sinaliza ao redutor qual mutação disparar. A recomendação é manter tudo do aplicativo em uma única loja.</p>\n<p>Redux suporta vários redutores em uma única loja. Os redutores têm uma relação de um para um entre os parâmetros de entrada e o estado de saída. Isso torna os redutores funções puras. Das 19 Ferramentas essenciais para o React o Redux sem dúvida é um dos mais importantes.</p>\n<p>Um redutor típico que sofre mutação pode ter a seguinte aparência:</p>\n<pre><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">simpleReducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'SIMPLE_UPDATE_DATA'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Gerenciamento de estado previsível;</li>\n<li>Vários reducers em uma única loja;</li>\n<li>Reducers são funções puras</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>Configurar do zero pode ser um pouco doloroso</li>\n</ul>\n<h2>08 - React-Redux</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://react-redux.js.org/\" target=\"_blank\" rel=\"noopener\">react-redux.js.org/</a></li>\n<li>Repositório: <a href=\"https://github.com/reduxjs/react-redux\" target=\"_blank\" rel=\"noopener\">github.com/reduxjs/react-redux</a></li>\n<li>Estrelas no GitHub: 18.500+</li>\n<li>Desenvolvido: Equipe Redux</li>\n<li>Versão atual da criação do artigo: 7.2.1</li>\n<li>Colaboradores: 220+</li>\n</ul>\n<p>Se você quiser usar Redux em seus projetos React, logo descobrirá os vínculos oficiais do React para Redux. Isso vem em dois módulos principais: <strong>Providere</strong> e <strong>connect</strong>. O Provideré um componente React com um storeprop.</p>\n<p>Este acessório é como uma única loja se conecta à marcação JSX. A connectfunção tem dois parâmetros: mapStateToPropse mapDispatchToProps.</p>\n<p>É aqui que o gerenciamento de estado do Redux se conecta aos adereços de componentes. À medida que o estado muda ou dispara disparos, as ligações cuidam de definir o estado no React.</p>\n<p>Esta é a aparência de uma conexão:</p>\n<pre><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> bindActionCreators <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> connect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mapStateToProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>simple<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mapDispatchToProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dispatch</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token function\">bindActionCreators</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'SIMPLE_UPDATE_DATA'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>mapStateToProps<span class=\"token punctuation\">,</span> mapDispatchToProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>SimpleComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Ligações oficiais do React para Redux;</li>\n<li>Vincula-se a marcação JSX;</li>\n<li>Conecta componentes a uma única loja</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>A curva de aprendizado é um pouco íngreme</li>\n</ul>\n<h2>09 - React Router</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://reactrouter.com/\" target=\"_blank\" rel=\"noopener\">reactrouter.com/</a></li>\n<li>Repositório: <a href=\"https://github.com/ReactTraining/react-router\" target=\"_blank\" rel=\"noopener\">github.com/ReactTraining/react-router</a></li>\n<li>Estrelas no GitHub: 42,200+</li>\n<li>Desenvolvido: React Training</li>\n<li>Versão atual da criação do artigo: 5.2.0</li>\n<li>Colaboradores: 640+</li>\n</ul>\n<p>React Router é a biblioteca de roteamento padrão de fato para React. Quando você precisar navegar por um aplicação React com várias visualizações, precisará de um roteador para gerenciar os URLs. O React Router cuida disso, mantendo a IU da aplicação e a URL em sincronia.</p>\n<p>A biblioteca é composta por três pacotes:</p>\n<ul>\n<li>react-router;</li>\n<li>react-router-dom;</li>\n<li>react-router-native</li>\n</ul>\n<p>O pacote principal do roteador é o <strong>react-router</strong>, enquanto os outros dois são específicos do ambiente. Você deve usar react-router-domse estiver criando um site e react-router-nativese estiver criando um aplicativo React Native.</p>\n<p>Versões recentes do React Router introduziram o hooks, que permitem acessar o estado do roteador e realizar a navegação de dentro de seus componentes, bem como um padrão de renderização de rota mais recente:</p>\n<pre><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Home</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Se quiser saber mais sobre o que o React Router clique neste artigo <a href=\"/react-router-versao-5-guia-completo/\">React Router v5: O guia completo</a>.</p>\n<p>Vantagens</p>\n<ul>\n<li>O roteamento entre componentes é rápido;</li>\n<li>Animações e transições podem ser facilmente implementadas;</li>\n<li>Conecta componentes a uma única loja</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>Sem configuração adicional, os dados são baixados para visualizações que um usuário pode não visitar;</li>\n<li>Roteamento do lado do cliente (por meio do qual JavaScript é convertido em HTML) tem implicações de SEO.</li>\n</ul>\n<h2>10 - ESLint</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://eslint.org/\" target=\"_blank\" rel=\"noopener\">eslint.org/</a></li>\n<li>Repositório: <a href=\"https://github.com/lodash/lodash\" target=\"_blank\" rel=\"noopener\">github.com/lodash/lodash</a></li>\n<li>Estrelas no GitHub: 17.000+</li>\n<li>Desenvolvido: Nicholas C. Zakas e a equipe ESLint</li>\n<li>Versão atual da criação do artigo: 7.11.0</li>\n<li>Colaboradores: 820+</li>\n</ul>\n<p>ESLint é uma ferramenta de linting que pode ser usada para manter seu estilo de código consistente das, impor a qualidade do código e detectar erros potenciais e padrões ruins com antecedência, 19 Ferramentas essenciais para o React essa é indispensável. Ele oferece um plugin com regras de linting específicas do React e é frequentemente usado em conjunto com o guia de estilo React do Airbnb .</p>\n<p>Embora ESLint possa ser executado através da linha de comando, vale a pena gastar algum tempo integrando-o ao editor de sua escolha. Muitos dos problemas que encontra podem ser corrigidos automaticamente e, juntamente com uma ferramenta como o mais bonito , ESLint pode seriamente ajudar a melhorar a qualidade de seu código, bem como a sua experiência global desenvolvedor.</p>\n<p>Qualquer pessoa que usar o Create React perceberá que ele já vem com o ESLint habilitado e fornece um conjunto mínimo de regras destinadas a encontrar erros comuns.</p>\n<p>Vantagens</p>\n<ul>\n<li>Flexível: qualquer regra pode ser alternada e muitas regras têm configurações extras que podem ser ajustadas;</li>\n<li>Extensível: muitos plug-ins disponíveis;</li>\n<li>Suporte para JSX e TypeScript</li>\n</ul>\n<p>Desvantagens</p>\n<ul>\n<li>A integração do editor pode ser potencialmente incômoda;</li>\n<li>Pode potencialmente introduzir várias novas dependências para um projeto</li>\n</ul>\n<h2>11 - Lodash</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://lodash.com/\" target=\"_blank\" rel=\"noopener\">lodash.com/</a></li>\n<li>Repositório: <a href=\"https://github.com/lodash/lodash\" target=\"_blank\" rel=\"noopener\">github.com/lodash/lodash</a></li>\n<li>Estrelas no GitHub: 46.500+</li>\n<li>Desenvolvido: John-David Dalton e Lodash team</li>\n<li>Versão atual da criação do artigo: 4.17.20</li>\n<li>Colaboradores: 300+</li>\n</ul>\n<p>Lodash é uma biblioteca de utilitários JavaScript moderna, útil para componentes React. Por exemplo, eventos de entrada do formulário React, como <strong>onChange</strong> para disparar uma vez por pressionamento de tecla. Se o componente obtém dados de uma API de back-end, ele dispara solicitações uma vez por pressionamento de tecla. Isso spams a API de back-end e causa problemas quando muitas pessoas usam a IU. O Lodash vem com eventos depurados, que disparam uma solicitação de API com muitos pressionamentos de tecla.</p>\n<p>Para configurar um evento com <strong>onChange</strong>:</p>\n<pre><code>onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token function\">updateDataValue</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Dependência modular;</li>\n<li>Funciona bem com divisão de código;</li>\n<li>Fácil de usar</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>Saber quando debounce eventos não é imediatamente óbvio</li>\n</ul>\n<h2>12 - Axios</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://www.npmjs.com/package/axios\" target=\"_blank\" rel=\"noopener\">npmjs.com/package/axios</a></li>\n<li>Repositório: <a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"noopener\">github.com/axios/axios</a></li>\n<li>Estrelas no GitHub: 77.500+</li>\n<li>Desenvolvido: Equipe Axios</li>\n<li>Versão atual da criação do artigo: 0.20.0</li>\n<li>Colaboradores: 250+</li>\n</ul>\n<p>Fazer solicitações HTTP para buscar ou salvar dados é uma das tarefas mais comuns de uma aplicação JavaScript do lado do cliente precisa fazer. E sem dúvida que nenhuma biblioteca é mais adequada para a tarefa do que axios, um cliente HTTP baseado em Promise com uma API fácil de usar.</p>\n<p>A ferramenta suporta <strong>async… await</strong> para fazer solicitações Ajax do navegador. Ele suporta o tratamento de erros caso haja erros via catch. A API da ferramenta suporta solicitações HTTP, como GET, DELETE, POST, PUT e PATCH. Isso também funciona bem com chamadas de API Promise, como Promise.all() enviar solicitações HTTP em paralelo.</p>\n<p>Semelhante à função do jQuery <strong>$.ajax</strong>, você pode fazer qualquer tipo de solicitação HTTP passando um objeto options para axios:</p>\n<pre><code><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> <span class=\"token string\">'camilo'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token string\">'reyes'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Baseado em promessa;</li>\n<li>Suporta async / await;</li>\n<li>Suporta tratamento de erros</li>\n</ul>\n<p>Desvantagens</p>\n<ul>\n<li>Não achei um ponto negativo assim claro. (Caso você saiba deixa aqui nos comentários)</li>\n</ul>\n<h2>13 - Jest</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"noopener\">jestjs.io/</a></li>\n<li>Repositório: <a href=\"https://github.com/facebook/jest\" target=\"_blank\" rel=\"noopener\">github.com/facebook/jest</a></li>\n<li>Estrelas no GitHub: 32.500+</li>\n<li>Desenvolvido: Facebook</li>\n<li>Versão atual da criação do artigo: 26.5.3</li>\n<li>Colaboradores: 1.000+</li>\n</ul>\n<p>Jest é um framework de teste com foco na simplicidade para projetos JavaScript. A boa notícia é que ele vem integrado com o <strong>Create React</strong>. Funciona com projetos que usam Babel, TypeScript e Node.</p>\n<p>Não há configuração na maioria dos projetos React. Os testes podem ser executados no modo de observação, que rastreia as alterações de código e executa novamente os testes. A API contém <strong>ite expect</strong> para começar rapidamente. 19 Ferramentas essenciais para o React, essa sobres teste você dev precisa conhece mais sobre teste, caso queira ler mais sobre o assunto de teste com react <a href=\"/react-guia-completo-para-testes/\">clique aqui</a></p>\n<p>Uma verificação de integridade para garantir que os testes sejam executados é:</p>\n<pre><code><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'says true is true'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Fácil configuração com Create React App;</li>\n<li>API fluente;</li>\n<li>Roda em modo relógio</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>Estrutura um pouco grande para renderizar componentes React</li>\n</ul>\n<h2>14 - Enzima</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"noopener\">jestjs.io/</a></li>\n<li>Repositório: <a href=\"https://github.com/facebook/jest\" target=\"_blank\" rel=\"noopener\">github.com/facebook/jest</a></li>\n<li>Estrelas no GitHub: 19.000+</li>\n<li>Desenvolvido: Airbnb</li>\n<li>Versão atual da criação do artigo: 3.11.0</li>\n<li>Colaboradores: 350+</li>\n</ul>\n<p>Enzyme é um utilitário de teste de JavaScript para React que torna mais fácil testar componentes. A API deve ser tão intuitiva quanto jQuery para travessia de componentes. Para obter o Enzyme, ele precisa de dois pacotes: enzymee um adaptador separado. O adaptador deve ser compatível com a versão do React. Por exemplo, enzyme-adapter-react-16para React ^16.4.0, enzyme-adapter-react-16.3for ~16.3.0, assim por diante e assim por diante. O adaptador precisa de um arquivo de configuração setupTest.jspara se integrar ao Jest.</p>\n<p>Ao usar o React 16, instale o Enzyme com:</p>\n<pre><code>npm i <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev enzyme enzyme<span class=\"token operator\">-</span>adapter<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span><span class=\"token number\">16</span>\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Suporta componentes React;</li>\n<li>Suporta o framework de teste Jest;</li>\n<li>API intuitiva.</li>\n</ul>\n<p>Desvantagens</p>\n<ul>\n<li>Meio doloroso configurar um adaptador no Jest</li>\n</ul>\n<h2>15 - Storybook</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://storybook.js.org/\" target=\"_blank\" rel=\"noopener\">storybook.js.org/</a></li>\n<li>Repositório: <a href=\"https://github.com/storybookjs/storybook\" target=\"_blank\" rel=\"noopener\">github.com/storybookjs/storybook</a></li>\n<li>Estrelas no GitHub: 54.000+</li>\n<li>Desenvolvido: Storybook</li>\n<li>Versão atual da criação do artigo: 6.0.26</li>\n<li>Colaboradores: 1100+</li>\n</ul>\n<p>Esta é uma ferramenta de código aberto para teste manual de componentes React isoladamente. O Storybook fornece uma caixa para construir componentes para entrar em casos extremos difíceis de alcançar. Ele permite simular para que possa renderizar componentes em estados-chave que são difíceis de reproduzir. A configuração é automática com Create React App ao usar <strong>react-scripts</strong>. Cada história no Storybook pode ter como alvo um único componente com muitos estados. Os arquivos de histórias têm uma convenção <strong>component.stories.js</strong> para que possam ser encontrados rapidamente.</p>\n<p>Para começar com o Storybook:</p>\n<pre><code>npx <span class=\"token operator\">-</span>p @storybook<span class=\"token operator\">/</span>cli sb init\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Cobre casos extremos difíceis de alcançar;</li>\n<li>Renderiza componentes na sandbox;</li>\n<li>Integra-se com Create React App</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>Difícil de automatizar testes</li>\n</ul>\n<h2>16 - React Bootstrap</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://react-bootstrap.github.io/\" target=\"_blank\" rel=\"noopener\">react-bootstrap.github.io/</a></li>\n<li>Repositório: <a href=\"https://github.com/react-bootstrap/react-bootstrap\" target=\"_blank\" rel=\"noopener\">github.com/react-bootstrap/react-bootstrap</a></li>\n<li>Estrelas no GitHub: 18.400+</li>\n<li>Desenvolvido: React Bootstrap</li>\n<li>Versão atual da criação do artigo: 1.3.0</li>\n<li>Colaboradores: 300+</li>\n</ul>\n<p>Este é o framework de front-end mais popular reconstruída para React. Cada componente do Bootstrap é construído do zero como um componente React. Isso substitui o Bootstrap JavaScript e dependências de nukes como o jQuery. A versão mais recente é compatível com Bootstrap 4.5. O React Bootstrap funciona com os milhares de temas do Bootstrap já encontrados na versão 4. Cada componente tem acessibilidade em mente e é acessível por padrão. Ele oferece suporte para Criar aplicativo React pronto para uso, e temas personalizados também são suportados.</p>\n<p>Para iniciar o React Bootstrap em um projeto React:</p>\n<pre><code>npm install react<span class=\"token operator\">-</span>bootstrap bootstrap\n</code></pre>\n<p>Vantagens</p>\n<ul>\n<li>Reconstruído do zero com componentes React;</li>\n<li>Acessibilidade em mente;</li>\n<li>Suporta Criar aplicativo React</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>Temas personalizados podem ser complicados em Create React App</li>\n</ul>\n<h2>17 - Material-UI</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://material-ui.com/\" target=\"_blank\" rel=\"noopener\">material-ui.com/</a></li>\n<li>Repositório: <a href=\"https://github.com/mui-org/material-ui\" target=\"_blank\" rel=\"noopener\">github.com/mui-org/material-ui</a></li>\n<li>Estrelas no GitHub: 54.500+</li>\n<li>Desenvolvido: Material-UI</li>\n<li>Versão atual da criação do artigo: 4.9.3</li>\n<li>Colaboradores: 1.500+</li>\n</ul>\n<p>O Material-UI oferece componentes React populares para um desenvolvimento web mais rápido e fácil. Permite construir seu próprio sistema de design ou começar com Material Design.</p>\n<p>Existem modelos e temas disponíveis, premium e gratuitos. Os temas premium têm uma etiqueta de preço dependendo da funcionalidade. Material-UI vem através de um pacote npm para instalação rápida.</p>\n<p>Para começar com Material-UI:</p>\n<pre><code>npm install @material<span class=\"token operator\">-</span>ui<span class=\"token operator\">/</span>core\n</code></pre>\n<p>Veja alguns exemplos:</p>\n<p><img src=\"/uploads/2020/11/exemplo-materialui.jpg\" alt=\"React 20 Ferramentas essenciais\"></p>\n<p>Exemplos material ui com React</p>\n<p>Vantagens</p>\n<ul>\n<li>Construir uma interface de usuário poderosa com pouco esforço;</li>\n<li>Oferece muitos componentes;</li>\n<li>Oferece muitos modelos</li>\n</ul>\n<p>Desvantagens</p>\n<ul>\n<li>alguns modelos premium tem valores altos (Porém não sei se isso é uma desvantagem)</li>\n</ul>\n<h2>18 - React DevTools</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://reactjs.org/blog/2019/08/15/new-react-devtools.html\" target=\"_blank\" rel=\"noopener\">reactjs.org/new-react-devtools</a></li>\n<li>Repositório: <a href=\"https://github.com/facebook/react/tree/v16.12.0\" target=\"_blank\" rel=\"noopener\">github.com/facebook/react</a></li>\n<li>Estrelas no GitHub: 157.000+</li>\n<li>Desenvolvido: Facebook</li>\n<li>Versão atual da criação do artigo: 16.14.0</li>\n<li>Colaboradores: 1.500+</li>\n</ul>\n<p>Uma das ferramentas mais importantes no conjunto de ferramentas de qualquer desenvolvedor React deve ser React Developer Tools - uma extensão de navegador para Chrome e Firefox . Isso permite que você inspecione facilmente uma árvore React, incluindo a hierarquia de componentes, adereços, estado e muito mais.</p>\n<p>Depois de instaladas, as ferramentas de desenvolvimento fornecerão duas novas guias no console do seu navegador - Componentes e Perfilador . Clicar no primeiro mostrará todos os componentes na árvore atual e permitirá que você os filtre por nome, enquanto o último permite registrar informações de desempenho sobre seu aplicativo React.</p>\n<p>Esta é uma ferramenta indispensável quando se trata de depurar um aplicativo React que consiste em mais de um punhado de componentes.</p>\n<p>Vantagens</p>\n<ul>\n<li>Ajuda você a entender o que está acontecendo em seu aplicativo React;</li>\n<li>Torna a depuração consideravelmente menos dolorosa;</li>\n<li>Veja quais sites estão usando React na produção.</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>Leve curva de aprendizado</li>\n</ul>\n<h2>Awesome React</h2>\n<ul>\n<li>Site Oficial<a href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\" target=\"_blank\" rel=\"noopener\">:</a> <a href=\"https://github.com/enaqx/awesome-react\" target=\"_blank\" rel=\"noopener\">github.com/enaqx/awesome-react</a></li>\n<li>Estrelas no GitHub: 39.500+</li>\n<li>Desenvolvido: n/a</li>\n<li>Versão atual da criação do artigo: n/a</li>\n<li>Colaboradores: 550+</li>\n</ul>\n<p>Vamos terminar esta lista com … outra lista! Desta vez, awesome-react - um repositório GitHub contendo uma coleção de coisas incríveis relacionadas ao ecossistema React.</p>\n<p>O repo tem uma seção de ferramentas que contém muitas das ferramentas listadas neste artigo (e muito mais além), bem como seções de tutoriais , demonstrações , vídeos , conferências , ReactNative , GraphQL e muito mais. Seja o que for que você esteja procurando no mundo do React, este é um ótimo lugar para começar.</p>\n<p>Vantagens</p>\n<ul>\n<li>Para todos os níveis</li>\n<li>Cobre uma ampla variedade de recursos;</li>\n<li>Mantido ativamente atualizado</li>\n</ul>\n<p>Desvantagem</p>\n<ul>\n<li>Uma ampla variedade de escolhas</li>\n</ul>\n<h2>Conclusão</h2>\n<p>Como mostrado, o ecossistema do React explodiu nos últimos anos. É a ferramenta ideal para empresas que desejam reutilizar componentes do React em um pacote consistente. Cada ferramenta é autônoma com poucas interdependências. Para 2020, minha recomendação é dar a essas ferramentas pelo menos uma chance.</p>\n<h3>Convite Especial para o Seminário Web TipsCode</h3>\n","date":"2020-11-09T00:00:00.000Z","readingTime":18,"title":"19 Ferramentas essenciais para o React que você precisa conhecer","categories":["react"],"description":"19 Ferramentas essenciais para o React. O ecossistema React evoluiu para uma lista crescente de ferramentas e bibliotecas de desenvolvimento. A abundância de ferramentas é um verdadeiro testemunho da popularidade do React.","imgArticle":"/thumbnail-article/19-ferramentas-essenciais.png","imgHome":"/thumbnail-home/19-ferramentas-essenciais.png"},{"slug":"let-e-const-no-javascript-entenda-as-diferenca-de-uma-vez-por-todas","content":"<p>Neste artigo, vou lhe mostrar alguns pontos sobre as diferenças entre <strong>let e const no javascript</strong>, duas novas palavras-chave adicionadas ao JavaScript com a chegada da versão ES6 (<a href=\"https://youtu.be/PlFlKxZbVqs\" target=\"_blank\" rel=\"noopener\">caso você queira entender mais sobre esse tal ES6 tem um vídeo no canal sobre isso</a>), essa mesma que mudou muito o jeito que alguns via a linguagem. Essa versão trouce muitas que aprimoraram.</p>\n<p>Este artigo é um dos muitos que cobrem novos recursos de JavaScript introduzidos com <strong>ES6</strong>, incluindo <strong>Map</strong> e <strong>WeakMap</strong>, <strong>Set</strong> e <strong>WeakSet</strong>, novos métodos disponíveis para <strong>String</strong> , <strong>Number</strong> e <strong>Array</strong>, e a nova sintaxe disponível para funções.</p>\n<h2>Palavra reservada let</h2>\n<p>Até ES5, JavaScript tinha apenas dois tipos de escopo, o <strong>escopo de função</strong> e <strong>escopo global</strong>. Isso causou muita frustração e comportamentos inesperados para os desenvolvedores vindos de outras linguagens como C, C ++ ou Java. JavaScript não tinha escopo de bloco, o que significa que uma variável só pode ser acessada dentro do bloco no qual está definida. Um bloco é tudo dentro de uma chave de abertura e fechamento. Vamos dar uma olhada no seguinte exemplo:</p>\n<pre><code><span class=\"token keyword\">function</span> <span class=\"token function\">fora</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> dentroV <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dentroV <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> dentroF <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dentroV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// saída 1</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dentroF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// saída 2</span>\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dentroV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// saída 1</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dentroF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// saída 2</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">fora</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Depois de executar esse código, você verá a seguinte saída no console:</p>\n<pre><code><span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n</code></pre>\n<p>O que a maioria dos desenvolvedores vindos das linguagens mencionadas acima esperariam é que a função <strong>fora()</strong> do bloco do <strong>if</strong> você não pode acessar a variável <strong>dentoF</strong>. Por exemplo, executar o código equivalente em C resulta no erro 'dentroF' undeclared at line …que se refere ao uso da variável &quot;dentroF&quot; fora do if.</p>\n<p><a href=\"/ebook-gratuito-html\"><img src=\"/uploads/2020/09/ebook-guia-completo-html.png\" alt=\"Ebook HTML\"></a></p>\n<p>Ebook HTML</p>\n<p>Esta situação mudou no ES6 com a disponibilidade do escopo do bloco. Os membros da organização ECMA sabiam que não podiam alterar o comportamento da palavra-chave var, pois isso quebraria a compatibilidade com versões anteriores. Então, eles decidiram introduzir uma nova palavra-chave chamada let. O último pode ser usado para definir variáveis ​​que limitam seu escopo ao bloco em que são declaradas. Além disso, ao contrário var, as variáveis ​​declaradas usando let não são içadas . Se você referenciar uma variável em um bloco antes que a <strong>let</strong> declaração dessa variável seja encontrada, isso resultará em a <strong>ReferenceError</strong>. Mas o que isso significa na prática? É bom apenas para iniciantes? De modo nenhum!</p>\n<p>Para explicar por que você vai gosta de usa o <strong>let</strong>, considere o seguinte código retirado do meu artigo:</p>\n<pre><code><span class=\"token comment\">// Código HTML</span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>TipsCode<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Palavra reservada <span class=\"token constant\">VAR</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>var<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Clique <span class=\"token number\">01</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>var<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Clique <span class=\"token number\">02</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>var<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Clique <span class=\"token number\">03</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token keyword\">var</span> nodes <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked element #'</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// JS</span>\n<span class=\"token keyword\">var</span> nodes <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Você clicou no Elemento'</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Aqui você pode reconhecer um problema conhecido que vem da declaração de variáveis, seu escopo e manipuladores de eventos.</p>\n<p><img src=\"/uploads/2020/11/Problemas-no-var.png\" alt=\"\"></p>\n<p>Código sendo executado no Codepen</p>\n<p>Graças ao <strong>ES6</strong>, podemos facilmente resolver esse problema declarando a variável <strong>i</strong> no <strong>loop for</strong> usando <strong>let</strong></p>\n<pre><code><span class=\"token comment\">// html</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>TipsCode<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Palavra reservada <span class=\"token constant\">LET</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>let<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Clique <span class=\"token number\">01</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>let<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Clique <span class=\"token number\">02</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>let<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Clique <span class=\"token number\">03</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">// js</span>\n<span class=\"token keyword\">var</span> nodes <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Você clicou no Elemento '</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img src=\"/uploads/2020/11/resolvido-com-let.png\" alt=\"let e const no javascript\"></p>\n<p>let</p>\n<p>A declaração <strong>let</strong> é compatível com o Node e todos os navegadores modernos. Existem, no entanto, alguns truques no Internet Explorer 11 que você pode ler na tabela de compatibilidade do ES6.</p>\n<p>Uma demonstração ao vivo que mostra a diferença entre var e let é mostrada abaixo e também está disponível <a href=\"https://kangax.github.io/compat-table/es6/\" target=\"_blank\" rel=\"noopener\">aqui</a>:</p>\n<p>As palavras <strong><em>let e cont no javascript</em></strong>, veio realmente para levar o javascript para outro nível, já vimos um pouco com o let, agora vamos estudar o const.</p>\n<h2>Palavra Reservada Const</h2>\n<p>O <strong>const</strong> aborda a necessidade comum dos desenvolvedores de associar um nome <strong>mnemônico</strong> a um determinado valor, de forma que o valor não possa ser alterado (ou, em termos mais simples, defina uma constante).</p>\n<p>Por exemplo, se estiver trabalhando com fórmulas matemáticas, pode ser necessário criar um <strong>objeto Math</strong>. Dentro desse objeto, você deseja associar os valores de PI (π ) PI é um valor mnemônico.</p>\n<p>A palavra <strong>const</strong> permite que você alcance esse objetivo. Usando-o, você pode criar uma constante que pode ser <strong>global</strong> ou <strong>local</strong> para a função na qual é declarada.</p>\n<p>Constantes definidas com const seguem as mesmas regras de escopo das variáveis, mas não podem ser declaradas novamente. Constantes também compartilham um recurso com variáveis ​​declaradas usando o let fato de que têm escopo de bloco em vez de escopo de função (e, portanto, não são içadas).</p>\n<p>Caso tente acessar uma constante antes de ser declarada, você receberá um <strong>ReferenceError</strong>. Se você tentar atribuir um valor diferente a uma variável declarada com <strong>0</strong>, receberá um <strong>TypeError</strong>.</p>\n<pre><code><span class=\"token keyword\">const</span> fora<span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\nfora<span class=\"token punctuation\">.</span>dentro <span class=\"token operator\">=</span> <span class=\"token number\">37</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fora<span class=\"token punctuation\">.</span>dentro<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 37</span>\n</code></pre>\n<p>Se você quiser tornar os valores de um objeto verdadeiramente imutáveis, use <a href=\"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\" target=\"_blank\" rel=\"noopener\">Object.freeze()</a>.</p>\n<p>O suporte dos navegadores com o recurso <strong>const</strong> é tão bom quanto para o <strong>let</strong>. A declaração <strong>const</strong> é compatível com o Node e todos os navegadores modernos.</p>\n<p>Veja um exemplo de uso do <strong>const</strong>:</p>\n<pre><code><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fora</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> con1 <span class=\"token operator\">=</span> <span class=\"token number\">3.141</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con1 <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> con2 <span class=\"token operator\">=</span> <span class=\"token number\">1.414</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>con1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// saída 3.141</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>con2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// saída 1.414</span>\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>con1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// saída 3.141</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>con2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot access con2 outside its block'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">fora</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img src=\"/uploads/2020/11/const-1024x411.png\" alt=\"let e const no javascript\"></p>\n<p>let e const no javascript</p>\n<h2>Conclusão</h2>\n<p>Neste tutorial, apresentei a você lete const, dois novos métodos para declarar variáveis ​​que foram apresentados à linguagem com ES6. Embora varnão vá desaparecer tão cedo, eu encorajo você a usar conste, letsempre que possível, reduzir a suscetibilidade do seu código a erros. Para ler mais, você também pode gostar de nossa dica rápida Como declarar variáveis ​​em JavaScript , que se aprofunda na mecânica da declaração de variáveis.</p>\n<h3>Recomendação</h3>\n","date":"2020-11-01T00:00:00.000Z","readingTime":9,"title":"Let e Const no JavaScript: Entenda as Diferença de uma vez por Todas","description":"Neste artigo, vou lhe mostrar alguns pontos sobre as diferenças entre let e const no javascript, duas novas palavras-chave adicionadas ao JavaScript com a chegada da versão ES6 ([caso você queira entender mais sobre esse tal ES6 tem um vídeo no canal sobre isso](https//youtu.be/PlFlKxZbVqs)), essa mesma que mudou muito o jeito que alguns via a linguagem. Essa versão trouce muitas que aprimoraram.","imgArticle":"/thumbnail-article/let-e-const.png","imgHome":"/thumbnail-home/let-e-const.png"}]}},"page":{"image":"/image-1200x630.png","status":200,"locale":"pt-BR","title":"TipsCode - TipsCode","description":"TipsCode Descomplicando a Tecnologia"}}