{"instances": {"application":{},"n-0-0-0-0":{},"n-0-0-0-1":{},"n-0-0-0-2":{},"n-0-0-0-3":{},"n-0-0-10/variaveis-css-um-guia-basico-de-como-criar":{"slug":"variaveis-css-um-guia-basico-de-como-criar","content":"<p>Durante anos, as variáveis ​​foram um dos recursos do CSS mais comumente solicitados. As variáveis ​​facilitam o gerenciamento de cores, fontes, tamanho e valores de animação e garantem sua consistência em uma base de código.<\/p>\n<p>Ás variáveis ​​se encaixariam nas regras existentes que governam o CSS e a herança. Agora eles estão disponíveis para desenvolvedores na forma de “propriedades personalizadas” CSS. Caso você queira aprender na prática em formato de video, tenho um super bônus onde te ensino a criar um projeto do zero usando React e neste projeto faço uso na prática de criação de variáveis <a href=\"/bonus1-calculadora\">clique aqui para ver<\/a>.<\/p>\n<p>Neste artigo, discutiremos a sintaxe das propriedades personalizadas do CSS. Veremos:<\/p>\n<ul>\n<li>Como definir propriedades e definir valores padrão para essas propriedades;<\/li>\n<li>Como as regras de cascata e herança funcionam com propriedades personalizadas<\/li>\n<li>Como usar propriedades personalizadas com consultas de mídia<\/li>\n<\/ul>\n<p>No final, você deve ter uma boa noção de como usar propriedades personalizadas em seus projetos. E se você quiser se aprofunda ainda mais no CSS da uma <a href=\"/programador-fullstack-8-semanas\">olhadinha aqui<\/a><\/p>\n<p>Nota: <a href=\"https://caniuse.com/\" target=\"_blank\" rel=\"noopener\">O suporte do navegador<\/a> para variáveis ​​personalizadas é robusto, existindo nas versões mais recentes de todos os principais navegadores. No entanto, o suporte não está disponível em versões de navegador mais antigas, mas lançadas recentemente, que ainda podem ser amplamente utilizadas pelo público do seu site. As versões do Microsoft Edge anteriores a 15 e do Safari anteriores à versão 9.1 carecem totalmente de suporte. O mesmo é válido para qualquer versão do Internet Explorer. O Microsoft Edge 15 tem suporte, mas também tem alguns bugs documentados.<\/p>\n<p><img src=\"/uploads/2020/08/css.jpeg\" alt=\"css\"><\/p>\n<p>700<\/p>\n<h2>Definindo Propriedade Personalizadas<\/h2>\n<p>Para definir uma propriedade customizada, selecione um nome e prefixe-o com dois hifens. Qualquer caractere alfanumérico pode fazer parte do nome. Os caracteres hífen <strong>( -)<\/strong> e sublinhado <strong>( _)<\/strong> também são permitidos. Uma ampla gama de caracteres Unicode pode fazer parte de um nome de propriedade personalizada, incluindo emojis. Por razões de clareza e legibilidade, use nomes alfanuméricos.<\/p>\n<p>Aqui está um exemplo:<\/p>\n<pre><code><span class=\"token operator\">--<\/span>primarycolor<span class=\"token operator\">:<\/span> #0ad0f9ff<span class=\"token punctuation\">;<\/span><span class=\"token regex\"><span class=\"token regex-delimiter\">/<\/span><span class=\"token regex-source language-regex\"> * Usando a notação de cores #rrggbbaa * <\/span><span class=\"token regex-delimiter\">/<\/span><\/span>\n<\/code><\/pre>\n<p>O <strong>--indica<\/strong> ao analisador CSS que esta é uma propriedade customizada. O valor da propriedade substituirá a propriedade sempre que for usado como uma variável.<\/p>\n<p>Os nomes das propriedades personalizadas diferenciam maiúsculas de minúsculas . Em outras palavras, -<strong>-primaryColore<\/strong> -<strong>-primarycolor<\/strong> são considerados dois nomes de propriedade distintos. Isso é um desvio do CSS tradicional, no qual o caso de propriedade e valor não importa. No entanto, é consistente com a maneira como o <a href=\"/6-recursos-do-ecmascript6/\">ECMAScript<\/a> trata as variáveis.<\/p>\n<p>Assim como outras propriedades, como <strong>display<\/strong> ou <strong>font<\/strong>, as propriedades personalizadas CSS devem ser definidas em um bloco de declaração. Um padrão comum é definir propriedades personalizadas dentro de um conjunto de regras que usa o elemento psuedo <strong>:root<\/strong> como um seletor:<\/p>\n<pre><code><span class=\"token operator\">:<\/span>root <span class=\"token punctuation\">{<\/span>\n    <span class=\"token operator\">--<\/span>primarycolor<span class=\"token operator\">:<\/span> #0ad0f9ff<span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\n<\/code><\/pre>\n<p><strong>:root<\/strong> é um <strong>pseudoelemento<\/strong> que se refere ao elemento raiz do documento. Para documentos HTML, esse é o elemento <strong>html<\/strong>. Para documentos <strong>SVG<\/strong>, é o elemento <strong>svg<\/strong>. Ao usar <strong>:root<\/strong>, as propriedades ficam imediatamente disponíveis em todo o documento.<\/p>\n<h2>Usando Propriedades Personalizadas no CSS<\/h2>\n<p>Para usar um valor de propriedade personalizada como variável, precisamos usar a função <strong><a href=\"https://developer.mozilla.org/pt-BR/docs/Web/CSS/var\" target=\"_blank\" rel=\"noopener\">var()<\/a><\/strong> Por exemplo, se quiséssemos usar nossa <strong>--primarycolor<\/strong> como uma propriedade personalizada como cor de fundo, usaríamos o seguinte:<\/p>\n<pre><code>body <span class=\"token punctuation\">{<\/span>\n    background<span class=\"token operator\">-<\/span>color<span class=\"token operator\">:<\/span> <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>primarycolor<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\n<\/code><\/pre>\n<p>O valor da nossa propriedade personalizada se tornará o valor calculado da propriedade. background-color<\/p>\n<p>Até o momento, as propriedades personalizadas só podem ser usadas como variáveis ​​para definir valores para propriedades CSS padrão. Você não pode, por exemplo, armazenar um nome de propriedade como uma variável e então reutilizá-lo. O seguinte CSS não funcionará:<\/p>\n<pre><code><span class=\"token operator\">:<\/span>root <span class=\"token punctuation\">{<\/span>\n    <span class=\"token operator\">--<\/span>top<span class=\"token operator\">-<\/span>border<span class=\"token operator\">:<\/span> border<span class=\"token operator\">-<\/span>top<span class=\"token punctuation\">;<\/span> <span class=\"token comment\">/* Can't set a property as custom property's value */<\/span>\n    <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>top<span class=\"token operator\">-<\/span>border<span class=\"token punctuation\">)<\/span><span class=\"token operator\">:<\/span> 10px solid #bc84d8 <span class=\"token comment\">/* Can't use a variable as a property */<\/span>\n<span class=\"token punctuation\">}<\/span>\n<\/code><\/pre>\n<p>Você também não pode armazenar um par propriedade-valor como uma variável e reutilizá-lo. O exemplo a seguir também é inválido:<\/p>\n<pre><code><span class=\"token operator\">:<\/span>root <span class=\"token punctuation\">{<\/span>\n   <span class=\"token operator\">--<\/span>text<span class=\"token operator\">-<\/span>color<span class=\"token operator\">:<\/span> <span class=\"token string\">'color: orange'<\/span><span class=\"token punctuation\">;<\/span> <span class=\"token comment\">/* Invalid property value */<\/span>\n<span class=\"token punctuation\">}<\/span>\nbody <span class=\"token punctuation\">{<\/span>\n  <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>text<span class=\"token operator\">-<\/span>color<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span> <span class=\"token comment\">/* Invalid use of a property */<\/span>\n<span class=\"token punctuation\">}<\/span>\n<\/code><\/pre>\n<p>Por último, você também não pode concatenar uma variável como parte de uma string de valor:<\/p>\n<pre><code><span class=\"token operator\">:<\/span>root <span class=\"token punctuation\">{<\/span>\n    <span class=\"token operator\">--<\/span>base<span class=\"token operator\">-<\/span>font<span class=\"token operator\">-<\/span>size<span class=\"token operator\">:<\/span> <span class=\"token number\">10<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\nbody <span class=\"token punctuation\">{<\/span>\n    <span class=\"token literal-property property\">font<\/span><span class=\"token operator\">:<\/span> <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>base<span class=\"token operator\">-<\/span>font<span class=\"token operator\">-<\/span>size<span class=\"token punctuation\">)<\/span>px <span class=\"token operator\">/<\/span> <span class=\"token number\">1.25<\/span> sans<span class=\"token operator\">-<\/span>serif<span class=\"token punctuation\">;<\/span> <span class=\"token comment\">/* Invalid CSS syntax. */<\/span>\n<span class=\"token punctuation\">}<\/span>\n<\/code><\/pre>\n<p>As propriedades personalizadas foram projetadas para serem usadas como propriedades que são analisadas de acordo com a especificação CSS. Caso a especificação de extensões CSS seja adotada por fornecedores de navegadores, poderíamos algum dia usar propriedades personalizadas para criar grupos de seletores personalizados ou at-rules personalizados. Por enquanto, no entanto, estamos limitados a usá-los como variáveis ​​para definir valores de propriedade padrão.'<\/p>\n<h2>Valor Substituto<\/h2>\n<p>A função <strong>var()<\/strong> realmente aceita até dois argumentos. O primeiro argumento deve ser um nome de propriedade customizada. O segundo argumento é opcional, mas deve ser um valor de declaração. Este valor de declaração funciona como uma espécie de valor de fallback se o valor da propriedade customizada não tiver sido definido.<\/p>\n<p>Vamos pegar o seguinte CSS:<\/p>\n<pre><code><span class=\"token punctuation\">.<\/span>btn__call<span class=\"token operator\">-<\/span>to<span class=\"token operator\">-<\/span>action <span class=\"token punctuation\">{<\/span>\n    <span class=\"token literal-property property\">background<\/span><span class=\"token operator\">:<\/span> <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>accent<span class=\"token operator\">-<\/span>color<span class=\"token punctuation\">,<\/span> salmon<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\n<\/code><\/pre>\n<p>Se -<strong>-accent-color<\/strong> for definido - digamos que seu valor seja <strong>#f30-<\/strong>, a cor de preenchimento de qualquer caminho com um atributo de classe <strong>.btn__call-to-action<\/strong> terá um preenchimento vermelho-laranja. Se não estiver definido, o preenchimento será salmão.<\/p>\n<p>Os valores da declaração também podem ser aninhados. Em outras palavras, você pode usar uma variável como valor substituto para a função <strong>var<\/strong>:<\/p>\n<pre><code>body <span class=\"token punctuation\">{<\/span>\n    background<span class=\"token operator\">-<\/span>color<span class=\"token operator\">:<\/span> <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>books<span class=\"token operator\">-<\/span>bg<span class=\"token punctuation\">,<\/span> <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>arts<span class=\"token operator\">-<\/span>bg<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\n<\/code><\/pre>\n<p>No CSS acima, se -<strong>-books-bg<\/strong> definido, a cor de fundo será configurada com o valor da propriedade <strong>--books-bg<\/strong>. Caso contrário, a cor de fundo será, em vez disso, qualquer valor atribuído --arts-bg. Se nenhum deles for definido, a cor de fundo será o valor inicial da propriedade - neste caso transparent.<\/p>\n<p>Algo semelhante acontece quando uma propriedade customizada recebe um valor inválido para a propriedade com a qual é usada. Considere o seguinte CSS:<\/p>\n<pre><code><span class=\"token operator\">:<\/span>root <span class=\"token punctuation\">{<\/span>\n    <span class=\"token operator\">--<\/span>footer<span class=\"token operator\">-<\/span>link<span class=\"token operator\">-<\/span>hover<span class=\"token operator\">:<\/span> #0cg<span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\n<span class=\"token literal-property property\">a<\/span><span class=\"token operator\">:<\/span>link <span class=\"token punctuation\">{<\/span>\n     <span class=\"token literal-property property\">color<\/span><span class=\"token operator\">:<\/span> blue<span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\n<span class=\"token literal-property property\">a<\/span><span class=\"token operator\">:<\/span>hover <span class=\"token punctuation\">{<\/span>\n    <span class=\"token literal-property property\">color<\/span><span class=\"token operator\">:<\/span> red<span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\nfooter a<span class=\"token operator\">:<\/span>hover <span class=\"token punctuation\">{<\/span>\n    <span class=\"token literal-property property\">color<\/span><span class=\"token operator\">:<\/span> <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>footer<span class=\"token operator\">-<\/span>link<span class=\"token operator\">-<\/span>hover<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\n<\/code><\/pre>\n<p>Neste caso, o valor do --footer-link-hoverimóvel não é uma cor válida. No Microsoft Edge, a cor do estado de foco para links de rodapé será herdada do a:hoverseletor. Na maioria dos outros navegadores, a cor do estado de foco será herdada da cor do texto do bodyelemento.<\/p>\n<h2>Propriedades Personalizadas<\/h2>\n<p>As propriedades personalizadas também obedecem às regras da cascata. Seus valores podem ser substituídos por regras subsequentes:<\/p>\n<pre><code><span class=\"token operator\">:<\/span>root <span class=\"token punctuation\">{<\/span>\n    <span class=\"token operator\">--<\/span>text<span class=\"token operator\">-<\/span>color<span class=\"token operator\">:<\/span> #<span class=\"token number\">190736<\/span><span class=\"token punctuation\">;<\/span> <span class=\"token comment\">/* navy */<\/span>\n<span class=\"token punctuation\">}<\/span>\nbody <span class=\"token punctuation\">{<\/span>\n   <span class=\"token operator\">--<\/span>text<span class=\"token operator\">-<\/span>color<span class=\"token operator\">:<\/span> #<span class=\"token number\">333<\/span><span class=\"token punctuation\">;<\/span>  <span class=\"token comment\">/* Dark gray */<\/span>\n<span class=\"token punctuation\">}<\/span>\nbody <span class=\"token punctuation\">{<\/span>\n  <span class=\"token literal-property property\">color<\/span><span class=\"token operator\">:<\/span> <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>text<span class=\"token operator\">-<\/span>color<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\n<\/code><\/pre>\n<p>No exemplo acima, nosso corpo de texto seria cinza escuro. Também podemos redefinir os valores por seletor. Vamos adicionar mais algumas regras a este CSS:<\/p>\n<pre><code><span class=\"token operator\">:<\/span>root <span class=\"token punctuation\">{<\/span>\n    <span class=\"token operator\">--<\/span>text<span class=\"token operator\">-<\/span>color<span class=\"token operator\">:<\/span> #<span class=\"token number\">190736<\/span><span class=\"token punctuation\">;<\/span> <span class=\"token comment\">/* navy */<\/span>\n<span class=\"token punctuation\">}<\/span>\nbody <span class=\"token punctuation\">{<\/span>\n   <span class=\"token operator\">--<\/span>text<span class=\"token operator\">-<\/span>color<span class=\"token operator\">:<\/span> #<span class=\"token number\">333<\/span><span class=\"token punctuation\">;<\/span>  <span class=\"token comment\">/* Dark gray */<\/span>\n<span class=\"token punctuation\">}<\/span>\np <span class=\"token punctuation\">{<\/span>\n  <span class=\"token operator\">--<\/span>text<span class=\"token operator\">-<\/span>color<span class=\"token operator\">:<\/span> #f60<span class=\"token punctuation\">;<\/span> <span class=\"token comment\">/* Orange */<\/span>\n<span class=\"token punctuation\">}<\/span>\nbody <span class=\"token punctuation\">{<\/span>\n  <span class=\"token literal-property property\">color<\/span><span class=\"token operator\">:<\/span> <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>text<span class=\"token operator\">-<\/span>color<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\np <span class=\"token punctuation\">{<\/span>\n  <span class=\"token literal-property property\">color<\/span><span class=\"token operator\">:<\/span> <span class=\"token keyword\">var<\/span><span class=\"token punctuation\">(<\/span><span class=\"token operator\">--<\/span>text<span class=\"token operator\">-<\/span>color<span class=\"token punctuation\">)<\/span>\n<span class=\"token punctuation\">}<\/span>\n<\/code><\/pre>\n<p>Nesse caso, qualquer texto envolto a tags <strong>&lt;p&gt;<\/strong> será da cor laranja. Mas o texto dentro da <strong>&lt;div&gt;<\/strong> ou em outros elementos ainda seria cinza escuro.<\/p>\n<p>Também é possível definir o valor de uma propriedade personalizada usando o atributo <strong>style<\/strong> - por exemplo, <strong>style=&quot;--brand-color: #9a09af&quot;<\/strong>- que pode ser útil em uma arquitetura de front-end baseada em componente.<\/p>\n<h2>Recomendados<\/h2>\n","date":"2020-08-16T00:00:00.000Z","readingTime":8,"title":"Variáveis CSS: Como Criar as Propriedades Personalizadas","categories":["css"],"tags":["como-criar","css","variaveis"],"description":"Durante anos, as variáveis ​​foram um dos recursos do CSS mais comumente solicitados. As variáveis ​​facilitam o gerenciamento de cores, fontes, tamanho e valores de animação e garantem sua consistência em uma base de código.","imgArticle":"/thumbnail-article/variaveis-css.png","imgHome":"/thumbnail-home/variaveis-css.png"},"n-0-0-10-0-0":{"expanded":false},"n-0-0-10-0-0-0-0-0-0-1-0":{}}, "page": {"image":"/thumbnail-article/variaveis-css.png","status":200,"locale":"pt-BR","title":"Variáveis CSS: Como Criar as Propriedades Personalizadas - TipsCode","description":"Durante anos, as variáveis ​​foram um dos recursos do CSS mais comumente solicitados. As variáveis ​​facilitam o gerenciamento de cores, fontes, tamanho e valores de animação e garantem sua consistência em uma base de código."}}