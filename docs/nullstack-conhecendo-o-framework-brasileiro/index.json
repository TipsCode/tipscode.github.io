{"instances": {"application":{},"n-0-0-0-0":{},"n-0-0-0-1":{},"n-0-0-9/nullstack-conhecendo-o-framework-brasileiro":{"slug":"nullstack-conhecendo-o-framework-brasileiro","content":"<h1>Introdução ao NullStack<\/h1>\n<p>Nullstack é um framework fullstack para a construção de aplicações web progressivas. Ele conecta uma camada de IU (interface do usuário) com gestão de estado a microsserviços especializados no mesmo componente usando o JavaScript puro (vanilla).<\/p>\n<p>Os componentes Nullstack são classes JavaScript normais com o front-end e back-end juntos. O objetivo é que o desenvolvedor tenha uma aplicação full-stack por padrão, sem lidar com tantas as decisões.<\/p>\n<p>O Nullstack permite que você faça sua aplicação sair funcionando o mais rápido possível, mas também é flexível o suficiente para que você possa refatorá-la a hora que achar necessário.<\/p>\n<p>Considere o exemplo abaixo, onde um componente com estado usa uma função de servidor para ler dados do banco e retornar para o cliente:<\/p>\n<pre><code><span class=\"token keyword\">import<\/span> Nullstack <span class=\"token keyword\">from<\/span> <span class=\"token string\">\"nullstack\"<\/span><span class=\"token punctuation\">;<\/span>\n\n<span class=\"token keyword\">class<\/span> <span class=\"token class-name\">BookPage<\/span> <span class=\"token keyword\">extends<\/span> <span class=\"token class-name\">Nullstack<\/span> <span class=\"token punctuation\">{<\/span>\n  title <span class=\"token operator\">=<\/span> <span class=\"token string\">\"\"<\/span><span class=\"token punctuation\">;<\/span>\n  description <span class=\"token operator\">=<\/span> <span class=\"token string\">\"\"<\/span><span class=\"token punctuation\">;<\/span>\n\n  <span class=\"token keyword\">static<\/span> <span class=\"token keyword\">async<\/span> <span class=\"token function\">findBookBySlug<\/span><span class=\"token punctuation\">(<\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\/span> database<span class=\"token punctuation\">,<\/span> slug <span class=\"token punctuation\">}<\/span><\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n    <span class=\"token keyword\">return<\/span> <span class=\"token keyword\">await<\/span> database\n      <span class=\"token punctuation\">.<\/span><span class=\"token function\">collection<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">\"books\"<\/span><span class=\"token punctuation\">)<\/span>\n      <span class=\"token punctuation\">.<\/span><span class=\"token function\">findOne<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">{<\/span> slug <span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n  <span class=\"token punctuation\">}<\/span>\n\n  <span class=\"token keyword\">async<\/span> <span class=\"token function\">initiate<\/span><span class=\"token punctuation\">(<\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\/span> page<span class=\"token punctuation\">,<\/span> params <span class=\"token punctuation\">}<\/span><\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n    <span class=\"token keyword\">const<\/span> book <span class=\"token operator\">=<\/span> <span class=\"token keyword\">await<\/span> <span class=\"token keyword\">this<\/span><span class=\"token punctuation\">.<\/span><span class=\"token function\">findBookBySlug<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">{<\/span>\n      <span class=\"token literal-property property\">slug<\/span><span class=\"token operator\">:<\/span> params<span class=\"token punctuation\">.<\/span>slug<span class=\"token punctuation\">,<\/span>\n    <span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n\n    <span class=\"token keyword\">if<\/span> <span class=\"token punctuation\">(<\/span>book<span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n      page<span class=\"token punctuation\">.<\/span>title <span class=\"token operator\">=<\/span> book<span class=\"token punctuation\">.<\/span>title<span class=\"token punctuation\">;<\/span>\n\n      Object<span class=\"token punctuation\">.<\/span><span class=\"token function\">assign<\/span><span class=\"token punctuation\">(<\/span><span class=\"token keyword\">this<\/span><span class=\"token punctuation\">,<\/span> book<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n    <span class=\"token punctuation\">}<\/span> <span class=\"token keyword\">else<\/span> <span class=\"token punctuation\">{<\/span>\n      page<span class=\"token punctuation\">.<\/span>status <span class=\"token operator\">=<\/span> <span class=\"token number\">404<\/span><span class=\"token punctuation\">;<\/span>\n    <span class=\"token punctuation\">}<\/span>\n  <span class=\"token punctuation\">}<\/span>\n\n  <span class=\"token function\">render<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n    <span class=\"token keyword\">return<\/span> <span class=\"token punctuation\">(<\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\/span>section<\/span><span class=\"token punctuation\">><\/span><\/span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\/span>h1<\/span><span class=\"token punctuation\">><\/span><\/span><span class=\"token punctuation\">{<\/span><span class=\"token keyword\">this<\/span><span class=\"token punctuation\">.<\/span>title<span class=\"token punctuation\">}<\/span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\/span>h1<\/span><span class=\"token punctuation\">><\/span><\/span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\/span>div<\/span><span class=\"token punctuation\">><\/span><\/span><span class=\"token punctuation\">{<\/span><span class=\"token keyword\">this<\/span><span class=\"token punctuation\">.<\/span>description<span class=\"token punctuation\">}<\/span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\/span>div<\/span><span class=\"token punctuation\">><\/span><\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\/span>section<\/span><span class=\"token punctuation\">><\/span><\/span>\n    <span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n  <span class=\"token punctuation\">}<\/span>\n<span class=\"token punctuation\">}<\/span>\n\n<span class=\"token keyword\">export<\/span> <span class=\"token keyword\">default<\/span> BookPage<span class=\"token punctuation\">;<\/span>\n<\/code><\/pre>\n<p>No exemplo acima, o Nullstack do lado do servidor renderiza e retorna o HTML pronto, isso ajuda a questão do SEO (Search Engine Optimization) quando o usuário entra na aplicação por esta rota. Quando o usuário navega para esta página, uma chamada de API é feita para um microsserviço onde é gerado automaticamente retornando um JSON e atualizando o DOM.<\/p>\n<h2>Como funciona o Nullstack?<\/h2>\n<p>O Nullstack gera dois pacotes: um para o servidor e outro para o cliente com o mínimo de dependências possíveis. O framework é responsável por decidir quando usar uma chamada de API ou usar uma função local; o programador só precisa pensar no comportamento de suas funções.<\/p>\n<p>Cada ambiente tem seu contexto, que é um proxy passado para cada função. O recurso torna o Nullstack um framework horizontal em vez de uma árvore, o que é muito importante se você trabalha em um projeto dinâmico, onde as alterações precisam ser feitas constatemente.<\/p>\n<p>No exemplo abaixo, estamos analisando o parâmetro &quot;README&quot; e quando a aplicação é iniciada, salvamos o seu valor no contexto do nosso servidor:<\/p>\n<pre><code><span class=\"token keyword\">import<\/span> Nullstack <span class=\"token keyword\">from<\/span> <span class=\"token string\">\"nullstack\"<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token keyword\">import<\/span> <span class=\"token punctuation\">{<\/span> readFileSync <span class=\"token punctuation\">}<\/span> <span class=\"token keyword\">from<\/span> <span class=\"token string\">\"fs\"<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token keyword\">import<\/span> <span class=\"token punctuation\">{<\/span> Remarkable <span class=\"token punctuation\">}<\/span> <span class=\"token keyword\">from<\/span> <span class=\"token string\">\"remarkable\"<\/span><span class=\"token punctuation\">;<\/span>\n\n<span class=\"token keyword\">class<\/span> <span class=\"token class-name\">About<\/span> <span class=\"token keyword\">extends<\/span> <span class=\"token class-name\">Nullstack<\/span> <span class=\"token punctuation\">{<\/span>\n  <span class=\"token keyword\">static<\/span> <span class=\"token keyword\">async<\/span> <span class=\"token function\">start<\/span><span class=\"token punctuation\">(<\/span><span class=\"token parameter\">context<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n    <span class=\"token keyword\">const<\/span> text <span class=\"token operator\">=<\/span> <span class=\"token function\">readFileSync<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">\"README.md\"<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token string\">\"utf-8\"<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n    <span class=\"token keyword\">const<\/span> md <span class=\"token operator\">=<\/span> <span class=\"token keyword\">new<\/span> <span class=\"token class-name\">Remarkable<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n\n    context<span class=\"token punctuation\">.<\/span>readme <span class=\"token operator\">=<\/span> md<span class=\"token punctuation\">.<\/span><span class=\"token function\">render<\/span><span class=\"token punctuation\">(<\/span>text<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n  <span class=\"token punctuation\">}<\/span>\n\n  <span class=\"token keyword\">static<\/span> <span class=\"token keyword\">async<\/span> <span class=\"token function\">getReadme<\/span><span class=\"token punctuation\">(<\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\/span> readme <span class=\"token punctuation\">}<\/span><\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n    <span class=\"token keyword\">return<\/span> readme<span class=\"token punctuation\">;<\/span>\n  <span class=\"token punctuation\">}<\/span>\n\n  <span class=\"token keyword\">async<\/span> <span class=\"token function\">initiate<\/span><span class=\"token punctuation\">(<\/span><span class=\"token parameter\">context<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n    <span class=\"token keyword\">if<\/span> <span class=\"token punctuation\">(<\/span><span class=\"token operator\">!<\/span>context<span class=\"token punctuation\">.<\/span>readme<span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n      context<span class=\"token punctuation\">.<\/span>readme <span class=\"token operator\">=<\/span> <span class=\"token keyword\">await<\/span> <span class=\"token keyword\">this<\/span><span class=\"token punctuation\">.<\/span><span class=\"token function\">getReadme<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n    <span class=\"token punctuation\">}<\/span>\n  <span class=\"token punctuation\">}<\/span>\n\n  <span class=\"token function\">render<\/span><span class=\"token punctuation\">(<\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\/span> readme <span class=\"token punctuation\">}<\/span><\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n    <span class=\"token keyword\">return<\/span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\/span>article<\/span> <span class=\"token attr-name\">html<\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\/span><span class=\"token punctuation\">{<\/span>readme <span class=\"token operator\">||<\/span> <span class=\"token string\">\"\"<\/span><span class=\"token punctuation\">}<\/span><\/span> <span class=\"token punctuation\">/><\/span><\/span><span class=\"token punctuation\">;<\/span>\n  <span class=\"token punctuation\">}<\/span>\n<span class=\"token punctuation\">}<\/span>\n\n<span class=\"token keyword\">export<\/span> <span class=\"token keyword\">default<\/span> About<span class=\"token punctuation\">;<\/span>\n<\/code><\/pre>\n<p>O cliente chama uma função de servidor e salva o conteúdo README no context do cliente que está disponível offline em outras visualizações. Ambos readFileSynce remarkablesão excluídos do pacote do cliente. Existem muitas otimizações neste código, mas o componente parece quase tão simples quanto uma versão mais básica.<\/p>\n<h2>Diferenças do Nullstack para outros frameworks?<\/h2>\n<p>O framework Nullstack, desde o início, foi pensado como uma solução completa que usa o mesmo conceito para resolver todos os problemas. Essa abordagem torna o Nullstack muito fácil de aprender, já que pegar os primeiras conceitos é o suficiente para permitir que você codifique com a stack.<\/p>\n<p>A stack tenta juntar todas as boas coisas de frameworks como React, Vue, Next entre outros em um único, porém não perdendo a essência da linguagem JavaScript.<\/p>\n<p>Atualmente, o mercado está tentando usar uma única abordagem &quot;tamanho único&quot;, onde React ou agora o mais novo queridinho NextJS é a solução para tudo. Se você pensar em frameworks como sapatos, o Nullstack é apenas um sapato que se ajusta ao tamanho do problema em questão e busca deixar o desenvolvedor mais confortável.<\/p>\n<h2>Um convite especial<\/h2>\n<p>Convido a todos que vem acompanhando o TipsCode a contribuir com esse projeto tão legal e criado por um Brasileiro, a TipsCode hoje é uma grande parceira do projeto Nullstack, hoje o site da Tips é criado com Nullstack e foi um desafio que me trouxe muito aprendizado e lhe convido a fazer o mesmo.<\/p>\n<p>Acesse <a href=\"https://github.com/nullstack/nullstack\" target=\"_blank\" rel=\"noopener\">o github do framework<\/a> e deixa uma estrelinha para ajudar o projeto a ganhar visibilidade!<\/p>\n<h2>Conclusão<\/h2>\n<p>Sem dúvidas tenho certeza que ainda vamos ver falar muito desse framework, então de uma chance a ele, da uma olhadinha com mais detalhes, no canal da TipsCode tem alguns vídeos bem legais, vou linkar aqui para você da uma olhada.<\/p>\n<p><a href=\"https://youtu.be/jwEUGTy2RKs\" target=\"_blank\" rel=\"noopener\">Como criar um app com nullstack<\/a><\/p>\n<h2>Créditos<\/h2>\n<p>Este artigo traduz com algumas alterações uma <a href=\"https://survivejs.com/blog/nullstack-interview/\" target=\"_blank\" rel=\"noopener\">Entrevista com o Autor do Framework<\/a> para o site SurviveJS<\/p>\n","date":"2021-05-27T00:00:00.000Z","readingTime":6,"title":"NullStack: Conhecendo o framework Brasileiro","tags":["nullstack","framework","desenvolvimento web","fullstack","tipscode","Alisson Suassuna","Javascript"],"description":"Nullstack é um framework fullstack para a construção de aplicaçõess web progressivos. Ele conecta uma camada de IU (interface gráfica) com monitoração de estado a microsserviços especializados no mesmo componente usando o JavaScript puro (vanila).","imgArticle":"/thumbnail-article/framework-nullstack.png","imgHome":"/thumbnail-home/framework-nullstack.png"},"n-0-0-9-0-0":{"expanded":false},"n-0-0-9-0-0-0-0-0-0-1-0":{}}, "page": {"image":"/thumbnail-article/framework-nullstack.png","status":200,"locale":"pt-BR","title":"NullStack: Conhecendo o framework Brasileiro - TipsCode","description":"Nullstack é um framework fullstack para a construção de aplicaçõess web progressivos. Ele conecta uma camada de IU (interface gráfica) com monitoração de estado a microsserviços especializados no mesmo componente usando o JavaScript puro (vanila)."}}